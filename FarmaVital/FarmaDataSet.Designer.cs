//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FarmaVital {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FarmaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FarmaDataSet : global::System.Data.DataSet {
        
        private clienteDataTable tablecliente;
        
        private estoqueDataTable tableestoque;
        
        private fabricanteDataTable tablefabricante;
        
        private funcionariosDataTable tablefuncionarios;
        
        private medicamentosDataTable tablemedicamentos;
        
        private vendaDataTable tablevenda;
        
        private global::System.Data.DataRelation relationFK__estoque__Fabri_c__2D27B809;
        
        private global::System.Data.DataRelation relationFK__estoque__Med_cd__2C3393D0;
        
        private global::System.Data.DataRelation relationFK__venda__Fun_cd__300424B4;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public FarmaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected FarmaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["cliente"] != null)) {
                    base.Tables.Add(new clienteDataTable(ds.Tables["cliente"]));
                }
                if ((ds.Tables["estoque"] != null)) {
                    base.Tables.Add(new estoqueDataTable(ds.Tables["estoque"]));
                }
                if ((ds.Tables["fabricante"] != null)) {
                    base.Tables.Add(new fabricanteDataTable(ds.Tables["fabricante"]));
                }
                if ((ds.Tables["funcionarios"] != null)) {
                    base.Tables.Add(new funcionariosDataTable(ds.Tables["funcionarios"]));
                }
                if ((ds.Tables["medicamentos"] != null)) {
                    base.Tables.Add(new medicamentosDataTable(ds.Tables["medicamentos"]));
                }
                if ((ds.Tables["venda"] != null)) {
                    base.Tables.Add(new vendaDataTable(ds.Tables["venda"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public clienteDataTable cliente {
            get {
                return this.tablecliente;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public estoqueDataTable estoque {
            get {
                return this.tableestoque;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fabricanteDataTable fabricante {
            get {
                return this.tablefabricante;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public funcionariosDataTable funcionarios {
            get {
                return this.tablefuncionarios;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public medicamentosDataTable medicamentos {
            get {
                return this.tablemedicamentos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendaDataTable venda {
            get {
                return this.tablevenda;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            FarmaDataSet cln = ((FarmaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["cliente"] != null)) {
                    base.Tables.Add(new clienteDataTable(ds.Tables["cliente"]));
                }
                if ((ds.Tables["estoque"] != null)) {
                    base.Tables.Add(new estoqueDataTable(ds.Tables["estoque"]));
                }
                if ((ds.Tables["fabricante"] != null)) {
                    base.Tables.Add(new fabricanteDataTable(ds.Tables["fabricante"]));
                }
                if ((ds.Tables["funcionarios"] != null)) {
                    base.Tables.Add(new funcionariosDataTable(ds.Tables["funcionarios"]));
                }
                if ((ds.Tables["medicamentos"] != null)) {
                    base.Tables.Add(new medicamentosDataTable(ds.Tables["medicamentos"]));
                }
                if ((ds.Tables["venda"] != null)) {
                    base.Tables.Add(new vendaDataTable(ds.Tables["venda"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablecliente = ((clienteDataTable)(base.Tables["cliente"]));
            if ((initTable == true)) {
                if ((this.tablecliente != null)) {
                    this.tablecliente.InitVars();
                }
            }
            this.tableestoque = ((estoqueDataTable)(base.Tables["estoque"]));
            if ((initTable == true)) {
                if ((this.tableestoque != null)) {
                    this.tableestoque.InitVars();
                }
            }
            this.tablefabricante = ((fabricanteDataTable)(base.Tables["fabricante"]));
            if ((initTable == true)) {
                if ((this.tablefabricante != null)) {
                    this.tablefabricante.InitVars();
                }
            }
            this.tablefuncionarios = ((funcionariosDataTable)(base.Tables["funcionarios"]));
            if ((initTable == true)) {
                if ((this.tablefuncionarios != null)) {
                    this.tablefuncionarios.InitVars();
                }
            }
            this.tablemedicamentos = ((medicamentosDataTable)(base.Tables["medicamentos"]));
            if ((initTable == true)) {
                if ((this.tablemedicamentos != null)) {
                    this.tablemedicamentos.InitVars();
                }
            }
            this.tablevenda = ((vendaDataTable)(base.Tables["venda"]));
            if ((initTable == true)) {
                if ((this.tablevenda != null)) {
                    this.tablevenda.InitVars();
                }
            }
            this.relationFK__estoque__Fabri_c__2D27B809 = this.Relations["FK__estoque__Fabri_c__2D27B809"];
            this.relationFK__estoque__Med_cd__2C3393D0 = this.Relations["FK__estoque__Med_cd__2C3393D0"];
            this.relationFK__venda__Fun_cd__300424B4 = this.Relations["FK__venda__Fun_cd__300424B4"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "FarmaDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FarmaDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecliente = new clienteDataTable();
            base.Tables.Add(this.tablecliente);
            this.tableestoque = new estoqueDataTable();
            base.Tables.Add(this.tableestoque);
            this.tablefabricante = new fabricanteDataTable();
            base.Tables.Add(this.tablefabricante);
            this.tablefuncionarios = new funcionariosDataTable();
            base.Tables.Add(this.tablefuncionarios);
            this.tablemedicamentos = new medicamentosDataTable();
            base.Tables.Add(this.tablemedicamentos);
            this.tablevenda = new vendaDataTable();
            base.Tables.Add(this.tablevenda);
            this.relationFK__estoque__Fabri_c__2D27B809 = new global::System.Data.DataRelation("FK__estoque__Fabri_c__2D27B809", new global::System.Data.DataColumn[] {
                        this.tablefabricante.fabri_cdColumn}, new global::System.Data.DataColumn[] {
                        this.tableestoque.Fabri_cdColumn}, false);
            this.Relations.Add(this.relationFK__estoque__Fabri_c__2D27B809);
            this.relationFK__estoque__Med_cd__2C3393D0 = new global::System.Data.DataRelation("FK__estoque__Med_cd__2C3393D0", new global::System.Data.DataColumn[] {
                        this.tablemedicamentos.Med_codColumn}, new global::System.Data.DataColumn[] {
                        this.tableestoque.Med_cdColumn}, false);
            this.Relations.Add(this.relationFK__estoque__Med_cd__2C3393D0);
            this.relationFK__venda__Fun_cd__300424B4 = new global::System.Data.DataRelation("FK__venda__Fun_cd__300424B4", new global::System.Data.DataColumn[] {
                        this.tablefuncionarios.Fun_cdColumn}, new global::System.Data.DataColumn[] {
                        this.tablevenda.Fun_cdColumn}, false);
            this.Relations.Add(this.relationFK__venda__Fun_cd__300424B4);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializecliente() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeestoque() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializefabricante() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializefuncionarios() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializemedicamentos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializevenda() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FarmaDataSet ds = new FarmaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void clienteRowChangeEventHandler(object sender, clienteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void estoqueRowChangeEventHandler(object sender, estoqueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void fabricanteRowChangeEventHandler(object sender, fabricanteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void funcionariosRowChangeEventHandler(object sender, funcionariosRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void medicamentosRowChangeEventHandler(object sender, medicamentosRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void vendaRowChangeEventHandler(object sender, vendaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class clienteDataTable : global::System.Data.TypedTableBase<clienteRow> {
            
            private global::System.Data.DataColumn columnclie_cd;
            
            private global::System.Data.DataColumn columnclie_nm;
            
            private global::System.Data.DataColumn columnclie_snm;
            
            private global::System.Data.DataColumn columnclie_cpf;
            
            private global::System.Data.DataColumn columnclie_rg;
            
            private global::System.Data.DataColumn columnclie_dtnasc;
            
            private global::System.Data.DataColumn columnclie_end;
            
            private global::System.Data.DataColumn columnclie_email;
            
            private global::System.Data.DataColumn columnclie_telefone;
            
            private global::System.Data.DataColumn columnclie_celular;
            
            private global::System.Data.DataColumn columnclie_numcasa;
            
            private global::System.Data.DataColumn columnclie_bairro;
            
            private global::System.Data.DataColumn columnclie_cidade;
            
            private global::System.Data.DataColumn columnclie_cep;
            
            private global::System.Data.DataColumn columnclie_uf;
            
            private global::System.Data.DataColumn columnclie_sexo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteDataTable() {
                this.TableName = "cliente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal clienteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected clienteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_cdColumn {
                get {
                    return this.columnclie_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_nmColumn {
                get {
                    return this.columnclie_nm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_snmColumn {
                get {
                    return this.columnclie_snm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_cpfColumn {
                get {
                    return this.columnclie_cpf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_rgColumn {
                get {
                    return this.columnclie_rg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_dtnascColumn {
                get {
                    return this.columnclie_dtnasc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_endColumn {
                get {
                    return this.columnclie_end;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_emailColumn {
                get {
                    return this.columnclie_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_telefoneColumn {
                get {
                    return this.columnclie_telefone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_celularColumn {
                get {
                    return this.columnclie_celular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_numcasaColumn {
                get {
                    return this.columnclie_numcasa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_bairroColumn {
                get {
                    return this.columnclie_bairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_cidadeColumn {
                get {
                    return this.columnclie_cidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_cepColumn {
                get {
                    return this.columnclie_cep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_ufColumn {
                get {
                    return this.columnclie_uf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn clie_sexoColumn {
                get {
                    return this.columnclie_sexo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow this[int index] {
                get {
                    return ((clienteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddclienteRow(clienteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow AddclienteRow(string clie_nm, string clie_snm, string clie_cpf, string clie_rg, System.DateTime clie_dtnasc, string clie_end, string clie_email, string clie_telefone, string clie_celular, string clie_numcasa, string clie_bairro, string clie_cidade, string clie_cep, string clie_uf, string clie_sexo) {
                clienteRow rowclienteRow = ((clienteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        clie_nm,
                        clie_snm,
                        clie_cpf,
                        clie_rg,
                        clie_dtnasc,
                        clie_end,
                        clie_email,
                        clie_telefone,
                        clie_celular,
                        clie_numcasa,
                        clie_bairro,
                        clie_cidade,
                        clie_cep,
                        clie_uf,
                        clie_sexo};
                rowclienteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowclienteRow);
                return rowclienteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow FindByclie_cd(int clie_cd) {
                return ((clienteRow)(this.Rows.Find(new object[] {
                            clie_cd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                clienteDataTable cln = ((clienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new clienteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnclie_cd = base.Columns["clie_cd"];
                this.columnclie_nm = base.Columns["clie_nm"];
                this.columnclie_snm = base.Columns["clie_snm"];
                this.columnclie_cpf = base.Columns["clie_cpf"];
                this.columnclie_rg = base.Columns["clie_rg"];
                this.columnclie_dtnasc = base.Columns["clie_dtnasc"];
                this.columnclie_end = base.Columns["clie_end"];
                this.columnclie_email = base.Columns["clie_email"];
                this.columnclie_telefone = base.Columns["clie_telefone"];
                this.columnclie_celular = base.Columns["clie_celular"];
                this.columnclie_numcasa = base.Columns["clie_numcasa"];
                this.columnclie_bairro = base.Columns["clie_bairro"];
                this.columnclie_cidade = base.Columns["clie_cidade"];
                this.columnclie_cep = base.Columns["clie_cep"];
                this.columnclie_uf = base.Columns["clie_uf"];
                this.columnclie_sexo = base.Columns["clie_sexo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnclie_cd = new global::System.Data.DataColumn("clie_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_cd);
                this.columnclie_nm = new global::System.Data.DataColumn("clie_nm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_nm);
                this.columnclie_snm = new global::System.Data.DataColumn("clie_snm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_snm);
                this.columnclie_cpf = new global::System.Data.DataColumn("clie_cpf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_cpf);
                this.columnclie_rg = new global::System.Data.DataColumn("clie_rg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_rg);
                this.columnclie_dtnasc = new global::System.Data.DataColumn("clie_dtnasc", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_dtnasc);
                this.columnclie_end = new global::System.Data.DataColumn("clie_end", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_end);
                this.columnclie_email = new global::System.Data.DataColumn("clie_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_email);
                this.columnclie_telefone = new global::System.Data.DataColumn("clie_telefone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_telefone);
                this.columnclie_celular = new global::System.Data.DataColumn("clie_celular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_celular);
                this.columnclie_numcasa = new global::System.Data.DataColumn("clie_numcasa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_numcasa);
                this.columnclie_bairro = new global::System.Data.DataColumn("clie_bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_bairro);
                this.columnclie_cidade = new global::System.Data.DataColumn("clie_cidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_cidade);
                this.columnclie_cep = new global::System.Data.DataColumn("clie_cep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_cep);
                this.columnclie_uf = new global::System.Data.DataColumn("clie_uf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_uf);
                this.columnclie_sexo = new global::System.Data.DataColumn("clie_sexo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclie_sexo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnclie_cd}, true));
                this.columnclie_cd.AutoIncrement = true;
                this.columnclie_cd.AutoIncrementSeed = -1;
                this.columnclie_cd.AutoIncrementStep = -1;
                this.columnclie_cd.AllowDBNull = false;
                this.columnclie_cd.ReadOnly = true;
                this.columnclie_cd.Unique = true;
                this.columnclie_nm.AllowDBNull = false;
                this.columnclie_nm.MaxLength = 40;
                this.columnclie_snm.AllowDBNull = false;
                this.columnclie_snm.MaxLength = 30;
                this.columnclie_cpf.AllowDBNull = false;
                this.columnclie_cpf.MaxLength = 50;
                this.columnclie_rg.AllowDBNull = false;
                this.columnclie_rg.MaxLength = 18;
                this.columnclie_dtnasc.AllowDBNull = false;
                this.columnclie_end.AllowDBNull = false;
                this.columnclie_end.MaxLength = 30;
                this.columnclie_email.AllowDBNull = false;
                this.columnclie_email.MaxLength = 60;
                this.columnclie_telefone.AllowDBNull = false;
                this.columnclie_telefone.MaxLength = 20;
                this.columnclie_celular.AllowDBNull = false;
                this.columnclie_celular.MaxLength = 20;
                this.columnclie_numcasa.AllowDBNull = false;
                this.columnclie_numcasa.MaxLength = 8;
                this.columnclie_bairro.AllowDBNull = false;
                this.columnclie_bairro.MaxLength = 30;
                this.columnclie_cidade.AllowDBNull = false;
                this.columnclie_cidade.MaxLength = 30;
                this.columnclie_cep.AllowDBNull = false;
                this.columnclie_cep.MaxLength = 25;
                this.columnclie_uf.AllowDBNull = false;
                this.columnclie_uf.MaxLength = 30;
                this.columnclie_sexo.AllowDBNull = false;
                this.columnclie_sexo.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow NewclienteRow() {
                return ((clienteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new clienteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(clienteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.clienteRowChanged != null)) {
                    this.clienteRowChanged(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.clienteRowChanging != null)) {
                    this.clienteRowChanging(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.clienteRowDeleted != null)) {
                    this.clienteRowDeleted(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.clienteRowDeleting != null)) {
                    this.clienteRowDeleting(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveclienteRow(clienteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FarmaDataSet ds = new FarmaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "clienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class estoqueDataTable : global::System.Data.TypedTableBase<estoqueRow> {
            
            private global::System.Data.DataColumn columnEst_cd;
            
            private global::System.Data.DataColumn columnMed_cd;
            
            private global::System.Data.DataColumn columnMed_desc;
            
            private global::System.Data.DataColumn columnEst_DtEntrada;
            
            private global::System.Data.DataColumn columnEst_Saida;
            
            private global::System.Data.DataColumn columnEst_QtEntrada;
            
            private global::System.Data.DataColumn columnEst_QtSaida;
            
            private global::System.Data.DataColumn columnFabri_cd;
            
            private global::System.Data.DataColumn columnFabri_RSocial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueDataTable() {
                this.TableName = "estoque";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal estoqueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected estoqueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Est_cdColumn {
                get {
                    return this.columnEst_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_cdColumn {
                get {
                    return this.columnMed_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_descColumn {
                get {
                    return this.columnMed_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Est_DtEntradaColumn {
                get {
                    return this.columnEst_DtEntrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Est_SaidaColumn {
                get {
                    return this.columnEst_Saida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Est_QtEntradaColumn {
                get {
                    return this.columnEst_QtEntrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Est_QtSaidaColumn {
                get {
                    return this.columnEst_QtSaida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fabri_cdColumn {
                get {
                    return this.columnFabri_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fabri_RSocialColumn {
                get {
                    return this.columnFabri_RSocial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRow this[int index] {
                get {
                    return ((estoqueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event estoqueRowChangeEventHandler estoqueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event estoqueRowChangeEventHandler estoqueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event estoqueRowChangeEventHandler estoqueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event estoqueRowChangeEventHandler estoqueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddestoqueRow(estoqueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRow AddestoqueRow(medicamentosRow parentmedicamentosRowByFK__estoque__Med_cd__2C3393D0, string Med_desc, System.DateTime Est_DtEntrada, System.DateTime Est_Saida, string Est_QtEntrada, string Est_QtSaida, fabricanteRow parentfabricanteRowByFK__estoque__Fabri_c__2D27B809, string Fabri_RSocial) {
                estoqueRow rowestoqueRow = ((estoqueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Med_desc,
                        Est_DtEntrada,
                        Est_Saida,
                        Est_QtEntrada,
                        Est_QtSaida,
                        null,
                        Fabri_RSocial};
                if ((parentmedicamentosRowByFK__estoque__Med_cd__2C3393D0 != null)) {
                    columnValuesArray[1] = parentmedicamentosRowByFK__estoque__Med_cd__2C3393D0[0];
                }
                if ((parentfabricanteRowByFK__estoque__Fabri_c__2D27B809 != null)) {
                    columnValuesArray[7] = parentfabricanteRowByFK__estoque__Fabri_c__2D27B809[0];
                }
                rowestoqueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowestoqueRow);
                return rowestoqueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRow FindByEst_cd(int Est_cd) {
                return ((estoqueRow)(this.Rows.Find(new object[] {
                            Est_cd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                estoqueDataTable cln = ((estoqueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new estoqueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnEst_cd = base.Columns["Est_cd"];
                this.columnMed_cd = base.Columns["Med_cd"];
                this.columnMed_desc = base.Columns["Med_desc"];
                this.columnEst_DtEntrada = base.Columns["Est_DtEntrada"];
                this.columnEst_Saida = base.Columns["Est_Saida"];
                this.columnEst_QtEntrada = base.Columns["Est_QtEntrada"];
                this.columnEst_QtSaida = base.Columns["Est_QtSaida"];
                this.columnFabri_cd = base.Columns["Fabri_cd"];
                this.columnFabri_RSocial = base.Columns["Fabri_RSocial"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnEst_cd = new global::System.Data.DataColumn("Est_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEst_cd);
                this.columnMed_cd = new global::System.Data.DataColumn("Med_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_cd);
                this.columnMed_desc = new global::System.Data.DataColumn("Med_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_desc);
                this.columnEst_DtEntrada = new global::System.Data.DataColumn("Est_DtEntrada", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEst_DtEntrada);
                this.columnEst_Saida = new global::System.Data.DataColumn("Est_Saida", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEst_Saida);
                this.columnEst_QtEntrada = new global::System.Data.DataColumn("Est_QtEntrada", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEst_QtEntrada);
                this.columnEst_QtSaida = new global::System.Data.DataColumn("Est_QtSaida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEst_QtSaida);
                this.columnFabri_cd = new global::System.Data.DataColumn("Fabri_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabri_cd);
                this.columnFabri_RSocial = new global::System.Data.DataColumn("Fabri_RSocial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabri_RSocial);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEst_cd}, true));
                this.columnEst_cd.AutoIncrement = true;
                this.columnEst_cd.AutoIncrementSeed = -1;
                this.columnEst_cd.AutoIncrementStep = -1;
                this.columnEst_cd.AllowDBNull = false;
                this.columnEst_cd.ReadOnly = true;
                this.columnEst_cd.Unique = true;
                this.columnMed_desc.AllowDBNull = false;
                this.columnMed_desc.MaxLength = 50;
                this.columnEst_DtEntrada.AllowDBNull = false;
                this.columnEst_Saida.AllowDBNull = false;
                this.columnEst_QtEntrada.AllowDBNull = false;
                this.columnEst_QtEntrada.MaxLength = 50;
                this.columnEst_QtSaida.AllowDBNull = false;
                this.columnEst_QtSaida.MaxLength = 50;
                this.columnFabri_RSocial.AllowDBNull = false;
                this.columnFabri_RSocial.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRow NewestoqueRow() {
                return ((estoqueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new estoqueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(estoqueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.estoqueRowChanged != null)) {
                    this.estoqueRowChanged(this, new estoqueRowChangeEvent(((estoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.estoqueRowChanging != null)) {
                    this.estoqueRowChanging(this, new estoqueRowChangeEvent(((estoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.estoqueRowDeleted != null)) {
                    this.estoqueRowDeleted(this, new estoqueRowChangeEvent(((estoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.estoqueRowDeleting != null)) {
                    this.estoqueRowDeleting(this, new estoqueRowChangeEvent(((estoqueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveestoqueRow(estoqueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FarmaDataSet ds = new FarmaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "estoqueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fabricanteDataTable : global::System.Data.TypedTableBase<fabricanteRow> {
            
            private global::System.Data.DataColumn columnfabri_cd;
            
            private global::System.Data.DataColumn columnfabri_nmfan;
            
            private global::System.Data.DataColumn columnfabri_RSocail;
            
            private global::System.Data.DataColumn columnfabri_cnpj;
            
            private global::System.Data.DataColumn columnfabri_IscEst;
            
            private global::System.Data.DataColumn columnfabri_IsMunicipal;
            
            private global::System.Data.DataColumn columnfabri_repre;
            
            private global::System.Data.DataColumn columnfabri_end;
            
            private global::System.Data.DataColumn columnfabri_num;
            
            private global::System.Data.DataColumn columnfabri_cep;
            
            private global::System.Data.DataColumn columnfabri_complemento;
            
            private global::System.Data.DataColumn columnfabri_bairro;
            
            private global::System.Data.DataColumn columnfabri_cidade;
            
            private global::System.Data.DataColumn columnfabri_estado;
            
            private global::System.Data.DataColumn columnfabri_tel1;
            
            private global::System.Data.DataColumn columnfabri_tel2;
            
            private global::System.Data.DataColumn columnfabri_email;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteDataTable() {
                this.TableName = "fabricante";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal fabricanteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected fabricanteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_cdColumn {
                get {
                    return this.columnfabri_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_nmfanColumn {
                get {
                    return this.columnfabri_nmfan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_RSocailColumn {
                get {
                    return this.columnfabri_RSocail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_cnpjColumn {
                get {
                    return this.columnfabri_cnpj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_IscEstColumn {
                get {
                    return this.columnfabri_IscEst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_IsMunicipalColumn {
                get {
                    return this.columnfabri_IsMunicipal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_repreColumn {
                get {
                    return this.columnfabri_repre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_endColumn {
                get {
                    return this.columnfabri_end;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_numColumn {
                get {
                    return this.columnfabri_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_cepColumn {
                get {
                    return this.columnfabri_cep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_complementoColumn {
                get {
                    return this.columnfabri_complemento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_bairroColumn {
                get {
                    return this.columnfabri_bairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_cidadeColumn {
                get {
                    return this.columnfabri_cidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_estadoColumn {
                get {
                    return this.columnfabri_estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_tel1Column {
                get {
                    return this.columnfabri_tel1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_tel2Column {
                get {
                    return this.columnfabri_tel2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn fabri_emailColumn {
                get {
                    return this.columnfabri_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow this[int index] {
                get {
                    return ((fabricanteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddfabricanteRow(fabricanteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow AddfabricanteRow(
                        string fabri_nmfan, 
                        string fabri_RSocail, 
                        string fabri_cnpj, 
                        string fabri_IscEst, 
                        string fabri_IsMunicipal, 
                        string fabri_repre, 
                        string fabri_end, 
                        string fabri_num, 
                        string fabri_cep, 
                        string fabri_complemento, 
                        string fabri_bairro, 
                        string fabri_cidade, 
                        string fabri_estado, 
                        string fabri_tel1, 
                        string fabri_tel2, 
                        string fabri_email) {
                fabricanteRow rowfabricanteRow = ((fabricanteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        fabri_nmfan,
                        fabri_RSocail,
                        fabri_cnpj,
                        fabri_IscEst,
                        fabri_IsMunicipal,
                        fabri_repre,
                        fabri_end,
                        fabri_num,
                        fabri_cep,
                        fabri_complemento,
                        fabri_bairro,
                        fabri_cidade,
                        fabri_estado,
                        fabri_tel1,
                        fabri_tel2,
                        fabri_email};
                rowfabricanteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfabricanteRow);
                return rowfabricanteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow FindByfabri_cd(int fabri_cd) {
                return ((fabricanteRow)(this.Rows.Find(new object[] {
                            fabri_cd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fabricanteDataTable cln = ((fabricanteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fabricanteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnfabri_cd = base.Columns["fabri_cd"];
                this.columnfabri_nmfan = base.Columns["fabri_nmfan"];
                this.columnfabri_RSocail = base.Columns["fabri_RSocail"];
                this.columnfabri_cnpj = base.Columns["fabri_cnpj"];
                this.columnfabri_IscEst = base.Columns["fabri_IscEst"];
                this.columnfabri_IsMunicipal = base.Columns["fabri_IsMunicipal"];
                this.columnfabri_repre = base.Columns["fabri_repre"];
                this.columnfabri_end = base.Columns["fabri_end"];
                this.columnfabri_num = base.Columns["fabri_num"];
                this.columnfabri_cep = base.Columns["fabri_cep"];
                this.columnfabri_complemento = base.Columns["fabri_complemento"];
                this.columnfabri_bairro = base.Columns["fabri_bairro"];
                this.columnfabri_cidade = base.Columns["fabri_cidade"];
                this.columnfabri_estado = base.Columns["fabri_estado"];
                this.columnfabri_tel1 = base.Columns["fabri_tel1"];
                this.columnfabri_tel2 = base.Columns["fabri_tel2"];
                this.columnfabri_email = base.Columns["fabri_email"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnfabri_cd = new global::System.Data.DataColumn("fabri_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_cd);
                this.columnfabri_nmfan = new global::System.Data.DataColumn("fabri_nmfan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_nmfan);
                this.columnfabri_RSocail = new global::System.Data.DataColumn("fabri_RSocail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_RSocail);
                this.columnfabri_cnpj = new global::System.Data.DataColumn("fabri_cnpj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_cnpj);
                this.columnfabri_IscEst = new global::System.Data.DataColumn("fabri_IscEst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_IscEst);
                this.columnfabri_IsMunicipal = new global::System.Data.DataColumn("fabri_IsMunicipal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_IsMunicipal);
                this.columnfabri_repre = new global::System.Data.DataColumn("fabri_repre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_repre);
                this.columnfabri_end = new global::System.Data.DataColumn("fabri_end", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_end);
                this.columnfabri_num = new global::System.Data.DataColumn("fabri_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_num);
                this.columnfabri_cep = new global::System.Data.DataColumn("fabri_cep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_cep);
                this.columnfabri_complemento = new global::System.Data.DataColumn("fabri_complemento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_complemento);
                this.columnfabri_bairro = new global::System.Data.DataColumn("fabri_bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_bairro);
                this.columnfabri_cidade = new global::System.Data.DataColumn("fabri_cidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_cidade);
                this.columnfabri_estado = new global::System.Data.DataColumn("fabri_estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_estado);
                this.columnfabri_tel1 = new global::System.Data.DataColumn("fabri_tel1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_tel1);
                this.columnfabri_tel2 = new global::System.Data.DataColumn("fabri_tel2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_tel2);
                this.columnfabri_email = new global::System.Data.DataColumn("fabri_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabri_email);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnfabri_cd}, true));
                this.columnfabri_cd.AutoIncrement = true;
                this.columnfabri_cd.AutoIncrementSeed = -1;
                this.columnfabri_cd.AutoIncrementStep = -1;
                this.columnfabri_cd.AllowDBNull = false;
                this.columnfabri_cd.ReadOnly = true;
                this.columnfabri_cd.Unique = true;
                this.columnfabri_nmfan.AllowDBNull = false;
                this.columnfabri_nmfan.MaxLength = 40;
                this.columnfabri_RSocail.AllowDBNull = false;
                this.columnfabri_RSocail.MaxLength = 40;
                this.columnfabri_cnpj.AllowDBNull = false;
                this.columnfabri_cnpj.MaxLength = 50;
                this.columnfabri_IscEst.AllowDBNull = false;
                this.columnfabri_IscEst.MaxLength = 50;
                this.columnfabri_IsMunicipal.AllowDBNull = false;
                this.columnfabri_IsMunicipal.MaxLength = 50;
                this.columnfabri_repre.AllowDBNull = false;
                this.columnfabri_repre.MaxLength = 30;
                this.columnfabri_end.AllowDBNull = false;
                this.columnfabri_end.MaxLength = 30;
                this.columnfabri_num.AllowDBNull = false;
                this.columnfabri_num.MaxLength = 20;
                this.columnfabri_cep.AllowDBNull = false;
                this.columnfabri_cep.MaxLength = 1;
                this.columnfabri_complemento.AllowDBNull = false;
                this.columnfabri_complemento.MaxLength = 20;
                this.columnfabri_bairro.AllowDBNull = false;
                this.columnfabri_bairro.MaxLength = 60;
                this.columnfabri_cidade.AllowDBNull = false;
                this.columnfabri_cidade.MaxLength = 30;
                this.columnfabri_estado.AllowDBNull = false;
                this.columnfabri_estado.MaxLength = 30;
                this.columnfabri_tel1.AllowDBNull = false;
                this.columnfabri_tel1.MaxLength = 20;
                this.columnfabri_tel2.AllowDBNull = false;
                this.columnfabri_tel2.MaxLength = 20;
                this.columnfabri_email.AllowDBNull = false;
                this.columnfabri_email.MaxLength = 60;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow NewfabricanteRow() {
                return ((fabricanteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fabricanteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fabricanteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fabricanteRowChanged != null)) {
                    this.fabricanteRowChanged(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fabricanteRowChanging != null)) {
                    this.fabricanteRowChanging(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fabricanteRowDeleted != null)) {
                    this.fabricanteRowDeleted(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fabricanteRowDeleting != null)) {
                    this.fabricanteRowDeleting(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovefabricanteRow(fabricanteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FarmaDataSet ds = new FarmaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fabricanteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class funcionariosDataTable : global::System.Data.TypedTableBase<funcionariosRow> {
            
            private global::System.Data.DataColumn columnFun_cd;
            
            private global::System.Data.DataColumn columnFun_nome;
            
            private global::System.Data.DataColumn columnFun_sobrenme;
            
            private global::System.Data.DataColumn columnFun_cpf;
            
            private global::System.Data.DataColumn columnFun_rg;
            
            private global::System.Data.DataColumn columnFun_dtNasc;
            
            private global::System.Data.DataColumn columnFun_end;
            
            private global::System.Data.DataColumn columnFun_numcasa;
            
            private global::System.Data.DataColumn columnFun_telefone;
            
            private global::System.Data.DataColumn columnFun_bairro;
            
            private global::System.Data.DataColumn columnFun_cidade;
            
            private global::System.Data.DataColumn columnFun_uf;
            
            private global::System.Data.DataColumn columnFun_cep;
            
            private global::System.Data.DataColumn columnFun_cargo;
            
            private global::System.Data.DataColumn columnFun_user;
            
            private global::System.Data.DataColumn columnFun_senha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosDataTable() {
                this.TableName = "funcionarios";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal funcionariosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected funcionariosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_cdColumn {
                get {
                    return this.columnFun_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_nomeColumn {
                get {
                    return this.columnFun_nome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_sobrenmeColumn {
                get {
                    return this.columnFun_sobrenme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_cpfColumn {
                get {
                    return this.columnFun_cpf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_rgColumn {
                get {
                    return this.columnFun_rg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_dtNascColumn {
                get {
                    return this.columnFun_dtNasc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_endColumn {
                get {
                    return this.columnFun_end;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_numcasaColumn {
                get {
                    return this.columnFun_numcasa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_telefoneColumn {
                get {
                    return this.columnFun_telefone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_bairroColumn {
                get {
                    return this.columnFun_bairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_cidadeColumn {
                get {
                    return this.columnFun_cidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_ufColumn {
                get {
                    return this.columnFun_uf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_cepColumn {
                get {
                    return this.columnFun_cep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_cargoColumn {
                get {
                    return this.columnFun_cargo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_userColumn {
                get {
                    return this.columnFun_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_senhaColumn {
                get {
                    return this.columnFun_senha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosRow this[int index] {
                get {
                    return ((funcionariosRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event funcionariosRowChangeEventHandler funcionariosRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event funcionariosRowChangeEventHandler funcionariosRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event funcionariosRowChangeEventHandler funcionariosRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event funcionariosRowChangeEventHandler funcionariosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddfuncionariosRow(funcionariosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosRow AddfuncionariosRow(string Fun_nome, string Fun_sobrenme, string Fun_cpf, string Fun_rg, System.DateTime Fun_dtNasc, string Fun_end, string Fun_numcasa, string Fun_telefone, string Fun_bairro, string Fun_cidade, string Fun_uf, string Fun_cep, string Fun_cargo, string Fun_user, string Fun_senha) {
                funcionariosRow rowfuncionariosRow = ((funcionariosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Fun_nome,
                        Fun_sobrenme,
                        Fun_cpf,
                        Fun_rg,
                        Fun_dtNasc,
                        Fun_end,
                        Fun_numcasa,
                        Fun_telefone,
                        Fun_bairro,
                        Fun_cidade,
                        Fun_uf,
                        Fun_cep,
                        Fun_cargo,
                        Fun_user,
                        Fun_senha};
                rowfuncionariosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfuncionariosRow);
                return rowfuncionariosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosRow FindByFun_cd(int Fun_cd) {
                return ((funcionariosRow)(this.Rows.Find(new object[] {
                            Fun_cd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                funcionariosDataTable cln = ((funcionariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new funcionariosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnFun_cd = base.Columns["Fun_cd"];
                this.columnFun_nome = base.Columns["Fun_nome"];
                this.columnFun_sobrenme = base.Columns["Fun_sobrenme"];
                this.columnFun_cpf = base.Columns["Fun_cpf"];
                this.columnFun_rg = base.Columns["Fun_rg"];
                this.columnFun_dtNasc = base.Columns["Fun_dtNasc"];
                this.columnFun_end = base.Columns["Fun_end"];
                this.columnFun_numcasa = base.Columns["Fun_numcasa"];
                this.columnFun_telefone = base.Columns["Fun_telefone"];
                this.columnFun_bairro = base.Columns["Fun_bairro"];
                this.columnFun_cidade = base.Columns["Fun_cidade"];
                this.columnFun_uf = base.Columns["Fun_uf"];
                this.columnFun_cep = base.Columns["Fun_cep"];
                this.columnFun_cargo = base.Columns["Fun_cargo"];
                this.columnFun_user = base.Columns["Fun_user"];
                this.columnFun_senha = base.Columns["Fun_senha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnFun_cd = new global::System.Data.DataColumn("Fun_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_cd);
                this.columnFun_nome = new global::System.Data.DataColumn("Fun_nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_nome);
                this.columnFun_sobrenme = new global::System.Data.DataColumn("Fun_sobrenme", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_sobrenme);
                this.columnFun_cpf = new global::System.Data.DataColumn("Fun_cpf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_cpf);
                this.columnFun_rg = new global::System.Data.DataColumn("Fun_rg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_rg);
                this.columnFun_dtNasc = new global::System.Data.DataColumn("Fun_dtNasc", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_dtNasc);
                this.columnFun_end = new global::System.Data.DataColumn("Fun_end", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_end);
                this.columnFun_numcasa = new global::System.Data.DataColumn("Fun_numcasa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_numcasa);
                this.columnFun_telefone = new global::System.Data.DataColumn("Fun_telefone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_telefone);
                this.columnFun_bairro = new global::System.Data.DataColumn("Fun_bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_bairro);
                this.columnFun_cidade = new global::System.Data.DataColumn("Fun_cidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_cidade);
                this.columnFun_uf = new global::System.Data.DataColumn("Fun_uf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_uf);
                this.columnFun_cep = new global::System.Data.DataColumn("Fun_cep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_cep);
                this.columnFun_cargo = new global::System.Data.DataColumn("Fun_cargo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_cargo);
                this.columnFun_user = new global::System.Data.DataColumn("Fun_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_user);
                this.columnFun_senha = new global::System.Data.DataColumn("Fun_senha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_senha);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFun_cd}, true));
                this.columnFun_cd.AutoIncrement = true;
                this.columnFun_cd.AutoIncrementSeed = -1;
                this.columnFun_cd.AutoIncrementStep = -1;
                this.columnFun_cd.AllowDBNull = false;
                this.columnFun_cd.ReadOnly = true;
                this.columnFun_cd.Unique = true;
                this.columnFun_nome.AllowDBNull = false;
                this.columnFun_nome.MaxLength = 40;
                this.columnFun_sobrenme.AllowDBNull = false;
                this.columnFun_sobrenme.MaxLength = 40;
                this.columnFun_cpf.AllowDBNull = false;
                this.columnFun_cpf.MaxLength = 20;
                this.columnFun_rg.AllowDBNull = false;
                this.columnFun_rg.MaxLength = 20;
                this.columnFun_dtNasc.AllowDBNull = false;
                this.columnFun_end.AllowDBNull = false;
                this.columnFun_end.MaxLength = 50;
                this.columnFun_numcasa.AllowDBNull = false;
                this.columnFun_numcasa.MaxLength = 20;
                this.columnFun_telefone.AllowDBNull = false;
                this.columnFun_telefone.MaxLength = 20;
                this.columnFun_bairro.AllowDBNull = false;
                this.columnFun_bairro.MaxLength = 40;
                this.columnFun_cidade.AllowDBNull = false;
                this.columnFun_cidade.MaxLength = 30;
                this.columnFun_uf.AllowDBNull = false;
                this.columnFun_uf.MaxLength = 40;
                this.columnFun_cep.AllowDBNull = false;
                this.columnFun_cep.MaxLength = 20;
                this.columnFun_cargo.AllowDBNull = false;
                this.columnFun_cargo.MaxLength = 30;
                this.columnFun_user.AllowDBNull = false;
                this.columnFun_user.MaxLength = 40;
                this.columnFun_senha.AllowDBNull = false;
                this.columnFun_senha.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosRow NewfuncionariosRow() {
                return ((funcionariosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new funcionariosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(funcionariosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.funcionariosRowChanged != null)) {
                    this.funcionariosRowChanged(this, new funcionariosRowChangeEvent(((funcionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.funcionariosRowChanging != null)) {
                    this.funcionariosRowChanging(this, new funcionariosRowChangeEvent(((funcionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.funcionariosRowDeleted != null)) {
                    this.funcionariosRowDeleted(this, new funcionariosRowChangeEvent(((funcionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.funcionariosRowDeleting != null)) {
                    this.funcionariosRowDeleting(this, new funcionariosRowChangeEvent(((funcionariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovefuncionariosRow(funcionariosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FarmaDataSet ds = new FarmaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "funcionariosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class medicamentosDataTable : global::System.Data.TypedTableBase<medicamentosRow> {
            
            private global::System.Data.DataColumn columnMed_cod;
            
            private global::System.Data.DataColumn columnMed_nmMed;
            
            private global::System.Data.DataColumn columnMed_NMed;
            
            private global::System.Data.DataColumn columnMed_desc;
            
            private global::System.Data.DataColumn columnMed_categoria;
            
            private global::System.Data.DataColumn columnMed_marca;
            
            private global::System.Data.DataColumn columnMed_DtFabri;
            
            private global::System.Data.DataColumn columnMed_DtVali;
            
            private global::System.Data.DataColumn columnMed_qtde;
            
            private global::System.Data.DataColumn columnMed_PreçUnid;
            
            private global::System.Data.DataColumn columnMed_PreçVen;
            
            private global::System.Data.DataColumn columnmed_Lucro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosDataTable() {
                this.TableName = "medicamentos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal medicamentosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected medicamentosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_codColumn {
                get {
                    return this.columnMed_cod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_nmMedColumn {
                get {
                    return this.columnMed_nmMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_NMedColumn {
                get {
                    return this.columnMed_NMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_descColumn {
                get {
                    return this.columnMed_desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_categoriaColumn {
                get {
                    return this.columnMed_categoria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_marcaColumn {
                get {
                    return this.columnMed_marca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_DtFabriColumn {
                get {
                    return this.columnMed_DtFabri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_DtValiColumn {
                get {
                    return this.columnMed_DtVali;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_qtdeColumn {
                get {
                    return this.columnMed_qtde;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_PreçUnidColumn {
                get {
                    return this.columnMed_PreçUnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Med_PreçVenColumn {
                get {
                    return this.columnMed_PreçVen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn med_LucroColumn {
                get {
                    return this.columnmed_Lucro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosRow this[int index] {
                get {
                    return ((medicamentosRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event medicamentosRowChangeEventHandler medicamentosRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event medicamentosRowChangeEventHandler medicamentosRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event medicamentosRowChangeEventHandler medicamentosRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event medicamentosRowChangeEventHandler medicamentosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddmedicamentosRow(medicamentosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosRow AddmedicamentosRow(string Med_nmMed, string Med_NMed, string Med_desc, string Med_categoria, string Med_marca, System.DateTime Med_DtFabri, System.DateTime Med_DtVali, string Med_qtde, decimal Med_PreçUnid, decimal Med_PreçVen, string med_Lucro) {
                medicamentosRow rowmedicamentosRow = ((medicamentosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Med_nmMed,
                        Med_NMed,
                        Med_desc,
                        Med_categoria,
                        Med_marca,
                        Med_DtFabri,
                        Med_DtVali,
                        Med_qtde,
                        Med_PreçUnid,
                        Med_PreçVen,
                        med_Lucro};
                rowmedicamentosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmedicamentosRow);
                return rowmedicamentosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosRow FindByMed_cod(int Med_cod) {
                return ((medicamentosRow)(this.Rows.Find(new object[] {
                            Med_cod})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                medicamentosDataTable cln = ((medicamentosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new medicamentosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnMed_cod = base.Columns["Med_cod"];
                this.columnMed_nmMed = base.Columns["Med_nmMed"];
                this.columnMed_NMed = base.Columns["Med_NMed"];
                this.columnMed_desc = base.Columns["Med_desc"];
                this.columnMed_categoria = base.Columns["Med_categoria"];
                this.columnMed_marca = base.Columns["Med_marca"];
                this.columnMed_DtFabri = base.Columns["Med_DtFabri"];
                this.columnMed_DtVali = base.Columns["Med_DtVali"];
                this.columnMed_qtde = base.Columns["Med_qtde"];
                this.columnMed_PreçUnid = base.Columns["Med_PreçUnid"];
                this.columnMed_PreçVen = base.Columns["Med_PreçVen"];
                this.columnmed_Lucro = base.Columns["med_Lucro"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnMed_cod = new global::System.Data.DataColumn("Med_cod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_cod);
                this.columnMed_nmMed = new global::System.Data.DataColumn("Med_nmMed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_nmMed);
                this.columnMed_NMed = new global::System.Data.DataColumn("Med_NMed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_NMed);
                this.columnMed_desc = new global::System.Data.DataColumn("Med_desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_desc);
                this.columnMed_categoria = new global::System.Data.DataColumn("Med_categoria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_categoria);
                this.columnMed_marca = new global::System.Data.DataColumn("Med_marca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_marca);
                this.columnMed_DtFabri = new global::System.Data.DataColumn("Med_DtFabri", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_DtFabri);
                this.columnMed_DtVali = new global::System.Data.DataColumn("Med_DtVali", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_DtVali);
                this.columnMed_qtde = new global::System.Data.DataColumn("Med_qtde", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_qtde);
                this.columnMed_PreçUnid = new global::System.Data.DataColumn("Med_PreçUnid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_PreçUnid);
                this.columnMed_PreçVen = new global::System.Data.DataColumn("Med_PreçVen", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMed_PreçVen);
                this.columnmed_Lucro = new global::System.Data.DataColumn("med_Lucro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmed_Lucro);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMed_cod}, true));
                this.columnMed_cod.AutoIncrement = true;
                this.columnMed_cod.AutoIncrementSeed = -1;
                this.columnMed_cod.AutoIncrementStep = -1;
                this.columnMed_cod.AllowDBNull = false;
                this.columnMed_cod.ReadOnly = true;
                this.columnMed_cod.Unique = true;
                this.columnMed_nmMed.AllowDBNull = false;
                this.columnMed_nmMed.MaxLength = 40;
                this.columnMed_NMed.AllowDBNull = false;
                this.columnMed_NMed.MaxLength = 20;
                this.columnMed_desc.AllowDBNull = false;
                this.columnMed_desc.MaxLength = 50;
                this.columnMed_categoria.AllowDBNull = false;
                this.columnMed_categoria.MaxLength = 50;
                this.columnMed_marca.AllowDBNull = false;
                this.columnMed_marca.MaxLength = 50;
                this.columnMed_DtFabri.AllowDBNull = false;
                this.columnMed_DtVali.AllowDBNull = false;
                this.columnMed_qtde.AllowDBNull = false;
                this.columnMed_qtde.MaxLength = 100;
                this.columnMed_PreçUnid.AllowDBNull = false;
                this.columnMed_PreçVen.AllowDBNull = false;
                this.columnmed_Lucro.AllowDBNull = false;
                this.columnmed_Lucro.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosRow NewmedicamentosRow() {
                return ((medicamentosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new medicamentosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(medicamentosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.medicamentosRowChanged != null)) {
                    this.medicamentosRowChanged(this, new medicamentosRowChangeEvent(((medicamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.medicamentosRowChanging != null)) {
                    this.medicamentosRowChanging(this, new medicamentosRowChangeEvent(((medicamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.medicamentosRowDeleted != null)) {
                    this.medicamentosRowDeleted(this, new medicamentosRowChangeEvent(((medicamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.medicamentosRowDeleting != null)) {
                    this.medicamentosRowDeleting(this, new medicamentosRowChangeEvent(((medicamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovemedicamentosRow(medicamentosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FarmaDataSet ds = new FarmaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "medicamentosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendaDataTable : global::System.Data.TypedTableBase<vendaRow> {
            
            private global::System.Data.DataColumn columnvend_cd;
            
            private global::System.Data.DataColumn columnFun_cd;
            
            private global::System.Data.DataColumn columnvend_DtdVend;
            
            private global::System.Data.DataColumn columnvend_FormPag;
            
            private global::System.Data.DataColumn columnvend_valorTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaDataTable() {
                this.TableName = "venda";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal vendaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected vendaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn vend_cdColumn {
                get {
                    return this.columnvend_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fun_cdColumn {
                get {
                    return this.columnFun_cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn vend_DtdVendColumn {
                get {
                    return this.columnvend_DtdVend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn vend_FormPagColumn {
                get {
                    return this.columnvend_FormPag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn vend_valorTotalColumn {
                get {
                    return this.columnvend_valorTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaRow this[int index] {
                get {
                    return ((vendaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vendaRowChangeEventHandler vendaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vendaRowChangeEventHandler vendaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vendaRowChangeEventHandler vendaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event vendaRowChangeEventHandler vendaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddvendaRow(vendaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaRow AddvendaRow(funcionariosRow parentfuncionariosRowByFK__venda__Fun_cd__300424B4, System.DateTime vend_DtdVend, string vend_FormPag, decimal vend_valorTotal) {
                vendaRow rowvendaRow = ((vendaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        vend_DtdVend,
                        vend_FormPag,
                        vend_valorTotal};
                if ((parentfuncionariosRowByFK__venda__Fun_cd__300424B4 != null)) {
                    columnValuesArray[1] = parentfuncionariosRowByFK__venda__Fun_cd__300424B4[0];
                }
                rowvendaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvendaRow);
                return rowvendaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaRow FindByvend_cd(int vend_cd) {
                return ((vendaRow)(this.Rows.Find(new object[] {
                            vend_cd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                vendaDataTable cln = ((vendaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vendaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnvend_cd = base.Columns["vend_cd"];
                this.columnFun_cd = base.Columns["Fun_cd"];
                this.columnvend_DtdVend = base.Columns["vend_DtdVend"];
                this.columnvend_FormPag = base.Columns["vend_FormPag"];
                this.columnvend_valorTotal = base.Columns["vend_valorTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnvend_cd = new global::System.Data.DataColumn("vend_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvend_cd);
                this.columnFun_cd = new global::System.Data.DataColumn("Fun_cd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFun_cd);
                this.columnvend_DtdVend = new global::System.Data.DataColumn("vend_DtdVend", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvend_DtdVend);
                this.columnvend_FormPag = new global::System.Data.DataColumn("vend_FormPag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvend_FormPag);
                this.columnvend_valorTotal = new global::System.Data.DataColumn("vend_valorTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvend_valorTotal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnvend_cd}, true));
                this.columnvend_cd.AutoIncrement = true;
                this.columnvend_cd.AutoIncrementSeed = -1;
                this.columnvend_cd.AutoIncrementStep = -1;
                this.columnvend_cd.AllowDBNull = false;
                this.columnvend_cd.ReadOnly = true;
                this.columnvend_cd.Unique = true;
                this.columnvend_DtdVend.AllowDBNull = false;
                this.columnvend_FormPag.AllowDBNull = false;
                this.columnvend_FormPag.MaxLength = 15;
                this.columnvend_valorTotal.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaRow NewvendaRow() {
                return ((vendaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vendaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(vendaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendaRowChanged != null)) {
                    this.vendaRowChanged(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendaRowChanging != null)) {
                    this.vendaRowChanging(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendaRowDeleted != null)) {
                    this.vendaRowDeleted(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendaRowDeleting != null)) {
                    this.vendaRowDeleting(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovevendaRow(vendaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FarmaDataSet ds = new FarmaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class clienteRow : global::System.Data.DataRow {
            
            private clienteDataTable tablecliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal clienteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecliente = ((clienteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int clie_cd {
                get {
                    return ((int)(this[this.tablecliente.clie_cdColumn]));
                }
                set {
                    this[this.tablecliente.clie_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_nm {
                get {
                    return ((string)(this[this.tablecliente.clie_nmColumn]));
                }
                set {
                    this[this.tablecliente.clie_nmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_snm {
                get {
                    return ((string)(this[this.tablecliente.clie_snmColumn]));
                }
                set {
                    this[this.tablecliente.clie_snmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_cpf {
                get {
                    return ((string)(this[this.tablecliente.clie_cpfColumn]));
                }
                set {
                    this[this.tablecliente.clie_cpfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_rg {
                get {
                    return ((string)(this[this.tablecliente.clie_rgColumn]));
                }
                set {
                    this[this.tablecliente.clie_rgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime clie_dtnasc {
                get {
                    return ((global::System.DateTime)(this[this.tablecliente.clie_dtnascColumn]));
                }
                set {
                    this[this.tablecliente.clie_dtnascColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_end {
                get {
                    return ((string)(this[this.tablecliente.clie_endColumn]));
                }
                set {
                    this[this.tablecliente.clie_endColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_email {
                get {
                    return ((string)(this[this.tablecliente.clie_emailColumn]));
                }
                set {
                    this[this.tablecliente.clie_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_telefone {
                get {
                    return ((string)(this[this.tablecliente.clie_telefoneColumn]));
                }
                set {
                    this[this.tablecliente.clie_telefoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_celular {
                get {
                    return ((string)(this[this.tablecliente.clie_celularColumn]));
                }
                set {
                    this[this.tablecliente.clie_celularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_numcasa {
                get {
                    return ((string)(this[this.tablecliente.clie_numcasaColumn]));
                }
                set {
                    this[this.tablecliente.clie_numcasaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_bairro {
                get {
                    return ((string)(this[this.tablecliente.clie_bairroColumn]));
                }
                set {
                    this[this.tablecliente.clie_bairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_cidade {
                get {
                    return ((string)(this[this.tablecliente.clie_cidadeColumn]));
                }
                set {
                    this[this.tablecliente.clie_cidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_cep {
                get {
                    return ((string)(this[this.tablecliente.clie_cepColumn]));
                }
                set {
                    this[this.tablecliente.clie_cepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_uf {
                get {
                    return ((string)(this[this.tablecliente.clie_ufColumn]));
                }
                set {
                    this[this.tablecliente.clie_ufColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string clie_sexo {
                get {
                    return ((string)(this[this.tablecliente.clie_sexoColumn]));
                }
                set {
                    this[this.tablecliente.clie_sexoColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class estoqueRow : global::System.Data.DataRow {
            
            private estoqueDataTable tableestoque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal estoqueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableestoque = ((estoqueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Est_cd {
                get {
                    return ((int)(this[this.tableestoque.Est_cdColumn]));
                }
                set {
                    this[this.tableestoque.Est_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Med_cd {
                get {
                    try {
                        return ((int)(this[this.tableestoque.Med_cdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Med_cd\' na tabela \'estoque\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableestoque.Med_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Med_desc {
                get {
                    return ((string)(this[this.tableestoque.Med_descColumn]));
                }
                set {
                    this[this.tableestoque.Med_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Est_DtEntrada {
                get {
                    return ((global::System.DateTime)(this[this.tableestoque.Est_DtEntradaColumn]));
                }
                set {
                    this[this.tableestoque.Est_DtEntradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Est_Saida {
                get {
                    return ((global::System.DateTime)(this[this.tableestoque.Est_SaidaColumn]));
                }
                set {
                    this[this.tableestoque.Est_SaidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Est_QtEntrada {
                get {
                    return ((string)(this[this.tableestoque.Est_QtEntradaColumn]));
                }
                set {
                    this[this.tableestoque.Est_QtEntradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Est_QtSaida {
                get {
                    return ((string)(this[this.tableestoque.Est_QtSaidaColumn]));
                }
                set {
                    this[this.tableestoque.Est_QtSaidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Fabri_cd {
                get {
                    try {
                        return ((int)(this[this.tableestoque.Fabri_cdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Fabri_cd\' na tabela \'estoque\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableestoque.Fabri_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fabri_RSocial {
                get {
                    return ((string)(this[this.tableestoque.Fabri_RSocialColumn]));
                }
                set {
                    this[this.tableestoque.Fabri_RSocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow fabricanteRow {
                get {
                    return ((fabricanteRow)(this.GetParentRow(this.Table.ParentRelations["FK__estoque__Fabri_c__2D27B809"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__estoque__Fabri_c__2D27B809"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosRow medicamentosRow {
                get {
                    return ((medicamentosRow)(this.GetParentRow(this.Table.ParentRelations["FK__estoque__Med_cd__2C3393D0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__estoque__Med_cd__2C3393D0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMed_cdNull() {
                return this.IsNull(this.tableestoque.Med_cdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMed_cdNull() {
                this[this.tableestoque.Med_cdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFabri_cdNull() {
                return this.IsNull(this.tableestoque.Fabri_cdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFabri_cdNull() {
                this[this.tableestoque.Fabri_cdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fabricanteRow : global::System.Data.DataRow {
            
            private fabricanteDataTable tablefabricante;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal fabricanteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefabricante = ((fabricanteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int fabri_cd {
                get {
                    return ((int)(this[this.tablefabricante.fabri_cdColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_nmfan {
                get {
                    return ((string)(this[this.tablefabricante.fabri_nmfanColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_nmfanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_RSocail {
                get {
                    return ((string)(this[this.tablefabricante.fabri_RSocailColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_RSocailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_cnpj {
                get {
                    return ((string)(this[this.tablefabricante.fabri_cnpjColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_cnpjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_IscEst {
                get {
                    return ((string)(this[this.tablefabricante.fabri_IscEstColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_IscEstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_IsMunicipal {
                get {
                    return ((string)(this[this.tablefabricante.fabri_IsMunicipalColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_IsMunicipalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_repre {
                get {
                    return ((string)(this[this.tablefabricante.fabri_repreColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_repreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_end {
                get {
                    return ((string)(this[this.tablefabricante.fabri_endColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_endColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_num {
                get {
                    return ((string)(this[this.tablefabricante.fabri_numColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_cep {
                get {
                    return ((string)(this[this.tablefabricante.fabri_cepColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_cepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_complemento {
                get {
                    return ((string)(this[this.tablefabricante.fabri_complementoColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_complementoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_bairro {
                get {
                    return ((string)(this[this.tablefabricante.fabri_bairroColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_bairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_cidade {
                get {
                    return ((string)(this[this.tablefabricante.fabri_cidadeColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_cidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_estado {
                get {
                    return ((string)(this[this.tablefabricante.fabri_estadoColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_estadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_tel1 {
                get {
                    return ((string)(this[this.tablefabricante.fabri_tel1Column]));
                }
                set {
                    this[this.tablefabricante.fabri_tel1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_tel2 {
                get {
                    return ((string)(this[this.tablefabricante.fabri_tel2Column]));
                }
                set {
                    this[this.tablefabricante.fabri_tel2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string fabri_email {
                get {
                    return ((string)(this[this.tablefabricante.fabri_emailColumn]));
                }
                set {
                    this[this.tablefabricante.fabri_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRow[] GetestoqueRows() {
                if ((this.Table.ChildRelations["FK__estoque__Fabri_c__2D27B809"] == null)) {
                    return new estoqueRow[0];
                }
                else {
                    return ((estoqueRow[])(base.GetChildRows(this.Table.ChildRelations["FK__estoque__Fabri_c__2D27B809"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class funcionariosRow : global::System.Data.DataRow {
            
            private funcionariosDataTable tablefuncionarios;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal funcionariosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefuncionarios = ((funcionariosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Fun_cd {
                get {
                    return ((int)(this[this.tablefuncionarios.Fun_cdColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_nome {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_nomeColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_nomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_sobrenme {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_sobrenmeColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_sobrenmeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_cpf {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_cpfColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_cpfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_rg {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_rgColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_rgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Fun_dtNasc {
                get {
                    return ((global::System.DateTime)(this[this.tablefuncionarios.Fun_dtNascColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_dtNascColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_end {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_endColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_endColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_numcasa {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_numcasaColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_numcasaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_telefone {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_telefoneColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_telefoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_bairro {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_bairroColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_bairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_cidade {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_cidadeColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_cidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_uf {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_ufColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_ufColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_cep {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_cepColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_cepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_cargo {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_cargoColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_cargoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_user {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_userColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fun_senha {
                get {
                    return ((string)(this[this.tablefuncionarios.Fun_senhaColumn]));
                }
                set {
                    this[this.tablefuncionarios.Fun_senhaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaRow[] GetvendaRows() {
                if ((this.Table.ChildRelations["FK__venda__Fun_cd__300424B4"] == null)) {
                    return new vendaRow[0];
                }
                else {
                    return ((vendaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__venda__Fun_cd__300424B4"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class medicamentosRow : global::System.Data.DataRow {
            
            private medicamentosDataTable tablemedicamentos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal medicamentosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemedicamentos = ((medicamentosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Med_cod {
                get {
                    return ((int)(this[this.tablemedicamentos.Med_codColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_codColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Med_nmMed {
                get {
                    return ((string)(this[this.tablemedicamentos.Med_nmMedColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_nmMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Med_NMed {
                get {
                    return ((string)(this[this.tablemedicamentos.Med_NMedColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_NMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Med_desc {
                get {
                    return ((string)(this[this.tablemedicamentos.Med_descColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Med_categoria {
                get {
                    return ((string)(this[this.tablemedicamentos.Med_categoriaColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_categoriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Med_marca {
                get {
                    return ((string)(this[this.tablemedicamentos.Med_marcaColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_marcaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Med_DtFabri {
                get {
                    return ((global::System.DateTime)(this[this.tablemedicamentos.Med_DtFabriColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_DtFabriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Med_DtVali {
                get {
                    return ((global::System.DateTime)(this[this.tablemedicamentos.Med_DtValiColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_DtValiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Med_qtde {
                get {
                    return ((string)(this[this.tablemedicamentos.Med_qtdeColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_qtdeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Med_PreçUnid {
                get {
                    return ((decimal)(this[this.tablemedicamentos.Med_PreçUnidColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_PreçUnidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Med_PreçVen {
                get {
                    return ((decimal)(this[this.tablemedicamentos.Med_PreçVenColumn]));
                }
                set {
                    this[this.tablemedicamentos.Med_PreçVenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string med_Lucro {
                get {
                    return ((string)(this[this.tablemedicamentos.med_LucroColumn]));
                }
                set {
                    this[this.tablemedicamentos.med_LucroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRow[] GetestoqueRows() {
                if ((this.Table.ChildRelations["FK__estoque__Med_cd__2C3393D0"] == null)) {
                    return new estoqueRow[0];
                }
                else {
                    return ((estoqueRow[])(base.GetChildRows(this.Table.ChildRelations["FK__estoque__Med_cd__2C3393D0"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class vendaRow : global::System.Data.DataRow {
            
            private vendaDataTable tablevenda;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal vendaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevenda = ((vendaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int vend_cd {
                get {
                    return ((int)(this[this.tablevenda.vend_cdColumn]));
                }
                set {
                    this[this.tablevenda.vend_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Fun_cd {
                get {
                    try {
                        return ((int)(this[this.tablevenda.Fun_cdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Fun_cd\' na tabela \'venda\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tablevenda.Fun_cdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime vend_DtdVend {
                get {
                    return ((global::System.DateTime)(this[this.tablevenda.vend_DtdVendColumn]));
                }
                set {
                    this[this.tablevenda.vend_DtdVendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string vend_FormPag {
                get {
                    return ((string)(this[this.tablevenda.vend_FormPagColumn]));
                }
                set {
                    this[this.tablevenda.vend_FormPagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal vend_valorTotal {
                get {
                    return ((decimal)(this[this.tablevenda.vend_valorTotalColumn]));
                }
                set {
                    this[this.tablevenda.vend_valorTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosRow funcionariosRow {
                get {
                    return ((funcionariosRow)(this.GetParentRow(this.Table.ParentRelations["FK__venda__Fun_cd__300424B4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__venda__Fun_cd__300424B4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFun_cdNull() {
                return this.IsNull(this.tablevenda.Fun_cdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFun_cdNull() {
                this[this.tablevenda.Fun_cdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class clienteRowChangeEvent : global::System.EventArgs {
            
            private clienteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRowChangeEvent(clienteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class estoqueRowChangeEvent : global::System.EventArgs {
            
            private estoqueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRowChangeEvent(estoqueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public estoqueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class fabricanteRowChangeEvent : global::System.EventArgs {
            
            private fabricanteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRowChangeEvent(fabricanteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class funcionariosRowChangeEvent : global::System.EventArgs {
            
            private funcionariosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosRowChangeEvent(funcionariosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public funcionariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class medicamentosRowChangeEvent : global::System.EventArgs {
            
            private medicamentosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosRowChangeEvent(medicamentosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public medicamentosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class vendaRowChangeEvent : global::System.EventArgs {
            
            private vendaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaRowChangeEvent(vendaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public vendaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FarmaVital.FarmaDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class clienteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public clienteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "cliente";
            tableMapping.ColumnMappings.Add("clie_cd", "clie_cd");
            tableMapping.ColumnMappings.Add("clie_nm", "clie_nm");
            tableMapping.ColumnMappings.Add("clie_snm", "clie_snm");
            tableMapping.ColumnMappings.Add("clie_cpf", "clie_cpf");
            tableMapping.ColumnMappings.Add("clie_rg", "clie_rg");
            tableMapping.ColumnMappings.Add("clie_dtnasc", "clie_dtnasc");
            tableMapping.ColumnMappings.Add("clie_end", "clie_end");
            tableMapping.ColumnMappings.Add("clie_email", "clie_email");
            tableMapping.ColumnMappings.Add("clie_telefone", "clie_telefone");
            tableMapping.ColumnMappings.Add("clie_celular", "clie_celular");
            tableMapping.ColumnMappings.Add("clie_numcasa", "clie_numcasa");
            tableMapping.ColumnMappings.Add("clie_bairro", "clie_bairro");
            tableMapping.ColumnMappings.Add("clie_cidade", "clie_cidade");
            tableMapping.ColumnMappings.Add("clie_cep", "clie_cep");
            tableMapping.ColumnMappings.Add("clie_uf", "clie_uf");
            tableMapping.ColumnMappings.Add("clie_sexo", "clie_sexo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [farm].[cliente] WHERE (([clie_cd] = @Original_clie_cd) AND ([clie_nm] = @Original_clie_nm) AND ([clie_snm] = @Original_clie_snm) AND ([clie_cpf] = @Original_clie_cpf) AND ([clie_rg] = @Original_clie_rg) AND ([clie_dtnasc] = @Original_clie_dtnasc) AND ([clie_end] = @Original_clie_end) AND ([clie_email] = @Original_clie_email) AND ([clie_telefone] = @Original_clie_telefone) AND ([clie_celular] = @Original_clie_celular) AND ([clie_numcasa] = @Original_clie_numcasa) AND ([clie_bairro] = @Original_clie_bairro) AND ([clie_cidade] = @Original_clie_cidade) AND ([clie_cep] = @Original_clie_cep) AND ([clie_uf] = @Original_clie_uf) AND ([clie_sexo] = @Original_clie_sexo))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_nm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_nm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_snm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_snm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cpf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_rg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_dtnasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_dtnasc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_end", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_telefone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_celular", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_celular", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_numcasa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_uf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_sexo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [farm].[cliente] ([clie_nm], [clie_snm], [clie_cpf], [clie_rg], [clie_dtnasc], [clie_end], [clie_email], [clie_telefone], [clie_celular], [clie_numcasa], [clie_bairro], [clie_cidade], [clie_cep], [clie_uf], [clie_sexo]) VALUES (@clie_nm, @clie_snm, @clie_cpf, @clie_rg, @clie_dtnasc, @clie_end, @clie_email, @clie_telefone, @clie_celular, @clie_numcasa, @clie_bairro, @clie_cidade, @clie_cep, @clie_uf, @clie_sexo);
SELECT clie_cd, clie_nm, clie_snm, clie_cpf, clie_rg, clie_dtnasc, clie_end, clie_email, clie_telefone, clie_celular, clie_numcasa, clie_bairro, clie_cidade, clie_cep, clie_uf, clie_sexo FROM farm.cliente WHERE (clie_cd = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_nm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_nm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_snm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_snm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cpf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_rg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_dtnasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_dtnasc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_end", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_telefone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_celular", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_celular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_numcasa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_uf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_sexo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [farm].[cliente] SET [clie_nm] = @clie_nm, [clie_snm] = @clie_snm, [clie_cpf] = @clie_cpf, [clie_rg] = @clie_rg, [clie_dtnasc] = @clie_dtnasc, [clie_end] = @clie_end, [clie_email] = @clie_email, [clie_telefone] = @clie_telefone, [clie_celular] = @clie_celular, [clie_numcasa] = @clie_numcasa, [clie_bairro] = @clie_bairro, [clie_cidade] = @clie_cidade, [clie_cep] = @clie_cep, [clie_uf] = @clie_uf, [clie_sexo] = @clie_sexo WHERE (([clie_cd] = @Original_clie_cd) AND ([clie_nm] = @Original_clie_nm) AND ([clie_snm] = @Original_clie_snm) AND ([clie_cpf] = @Original_clie_cpf) AND ([clie_rg] = @Original_clie_rg) AND ([clie_dtnasc] = @Original_clie_dtnasc) AND ([clie_end] = @Original_clie_end) AND ([clie_email] = @Original_clie_email) AND ([clie_telefone] = @Original_clie_telefone) AND ([clie_celular] = @Original_clie_celular) AND ([clie_numcasa] = @Original_clie_numcasa) AND ([clie_bairro] = @Original_clie_bairro) AND ([clie_cidade] = @Original_clie_cidade) AND ([clie_cep] = @Original_clie_cep) AND ([clie_uf] = @Original_clie_uf) AND ([clie_sexo] = @Original_clie_sexo));
SELECT clie_cd, clie_nm, clie_snm, clie_cpf, clie_rg, clie_dtnasc, clie_end, clie_email, clie_telefone, clie_celular, clie_numcasa, clie_bairro, clie_cidade, clie_cep, clie_uf, clie_sexo FROM farm.cliente WHERE (clie_cd = @clie_cd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_nm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_nm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_snm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_snm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cpf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_rg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_dtnasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_dtnasc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_end", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_telefone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_celular", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_celular", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_numcasa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_uf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_sexo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_nm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_nm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_snm", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_snm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cpf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_rg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_dtnasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_dtnasc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_end", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_telefone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_celular", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_celular", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_numcasa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_uf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_clie_sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clie_sexo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clie_cd", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "clie_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FarmaVital.Properties.Settings.Default.FarmaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT clie_cd, clie_nm, clie_snm, clie_cpf, clie_rg, clie_dtnasc, clie_end, clie" +
                "_email, clie_telefone, clie_celular, clie_numcasa, clie_bairro, clie_cidade, cli" +
                "e_cep, clie_uf, clie_sexo FROM farm.cliente";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FarmaDataSet.clienteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FarmaDataSet.clienteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FarmaDataSet.clienteDataTable dataTable = new FarmaDataSet.clienteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet.clienteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "cliente");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_clie_cd, 
                    string Original_clie_nm, 
                    string Original_clie_snm, 
                    string Original_clie_cpf, 
                    string Original_clie_rg, 
                    System.DateTime Original_clie_dtnasc, 
                    string Original_clie_end, 
                    string Original_clie_email, 
                    string Original_clie_telefone, 
                    string Original_clie_celular, 
                    string Original_clie_numcasa, 
                    string Original_clie_bairro, 
                    string Original_clie_cidade, 
                    string Original_clie_cep, 
                    string Original_clie_uf, 
                    string Original_clie_sexo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_clie_cd));
            if ((Original_clie_nm == null)) {
                throw new global::System.ArgumentNullException("Original_clie_nm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_clie_nm));
            }
            if ((Original_clie_snm == null)) {
                throw new global::System.ArgumentNullException("Original_clie_snm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_clie_snm));
            }
            if ((Original_clie_cpf == null)) {
                throw new global::System.ArgumentNullException("Original_clie_cpf");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_clie_cpf));
            }
            if ((Original_clie_rg == null)) {
                throw new global::System.ArgumentNullException("Original_clie_rg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_clie_rg));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_clie_dtnasc));
            if ((Original_clie_end == null)) {
                throw new global::System.ArgumentNullException("Original_clie_end");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_clie_end));
            }
            if ((Original_clie_email == null)) {
                throw new global::System.ArgumentNullException("Original_clie_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_clie_email));
            }
            if ((Original_clie_telefone == null)) {
                throw new global::System.ArgumentNullException("Original_clie_telefone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_clie_telefone));
            }
            if ((Original_clie_celular == null)) {
                throw new global::System.ArgumentNullException("Original_clie_celular");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_clie_celular));
            }
            if ((Original_clie_numcasa == null)) {
                throw new global::System.ArgumentNullException("Original_clie_numcasa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_clie_numcasa));
            }
            if ((Original_clie_bairro == null)) {
                throw new global::System.ArgumentNullException("Original_clie_bairro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_clie_bairro));
            }
            if ((Original_clie_cidade == null)) {
                throw new global::System.ArgumentNullException("Original_clie_cidade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_clie_cidade));
            }
            if ((Original_clie_cep == null)) {
                throw new global::System.ArgumentNullException("Original_clie_cep");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_clie_cep));
            }
            if ((Original_clie_uf == null)) {
                throw new global::System.ArgumentNullException("Original_clie_uf");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_clie_uf));
            }
            if ((Original_clie_sexo == null)) {
                throw new global::System.ArgumentNullException("Original_clie_sexo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_clie_sexo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string clie_nm, string clie_snm, string clie_cpf, string clie_rg, System.DateTime clie_dtnasc, string clie_end, string clie_email, string clie_telefone, string clie_celular, string clie_numcasa, string clie_bairro, string clie_cidade, string clie_cep, string clie_uf, string clie_sexo) {
            if ((clie_nm == null)) {
                throw new global::System.ArgumentNullException("clie_nm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(clie_nm));
            }
            if ((clie_snm == null)) {
                throw new global::System.ArgumentNullException("clie_snm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(clie_snm));
            }
            if ((clie_cpf == null)) {
                throw new global::System.ArgumentNullException("clie_cpf");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(clie_cpf));
            }
            if ((clie_rg == null)) {
                throw new global::System.ArgumentNullException("clie_rg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(clie_rg));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(clie_dtnasc));
            if ((clie_end == null)) {
                throw new global::System.ArgumentNullException("clie_end");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(clie_end));
            }
            if ((clie_email == null)) {
                throw new global::System.ArgumentNullException("clie_email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(clie_email));
            }
            if ((clie_telefone == null)) {
                throw new global::System.ArgumentNullException("clie_telefone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(clie_telefone));
            }
            if ((clie_celular == null)) {
                throw new global::System.ArgumentNullException("clie_celular");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(clie_celular));
            }
            if ((clie_numcasa == null)) {
                throw new global::System.ArgumentNullException("clie_numcasa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(clie_numcasa));
            }
            if ((clie_bairro == null)) {
                throw new global::System.ArgumentNullException("clie_bairro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(clie_bairro));
            }
            if ((clie_cidade == null)) {
                throw new global::System.ArgumentNullException("clie_cidade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(clie_cidade));
            }
            if ((clie_cep == null)) {
                throw new global::System.ArgumentNullException("clie_cep");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(clie_cep));
            }
            if ((clie_uf == null)) {
                throw new global::System.ArgumentNullException("clie_uf");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(clie_uf));
            }
            if ((clie_sexo == null)) {
                throw new global::System.ArgumentNullException("clie_sexo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(clie_sexo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string clie_nm, 
                    string clie_snm, 
                    string clie_cpf, 
                    string clie_rg, 
                    System.DateTime clie_dtnasc, 
                    string clie_end, 
                    string clie_email, 
                    string clie_telefone, 
                    string clie_celular, 
                    string clie_numcasa, 
                    string clie_bairro, 
                    string clie_cidade, 
                    string clie_cep, 
                    string clie_uf, 
                    string clie_sexo, 
                    int Original_clie_cd, 
                    string Original_clie_nm, 
                    string Original_clie_snm, 
                    string Original_clie_cpf, 
                    string Original_clie_rg, 
                    System.DateTime Original_clie_dtnasc, 
                    string Original_clie_end, 
                    string Original_clie_email, 
                    string Original_clie_telefone, 
                    string Original_clie_celular, 
                    string Original_clie_numcasa, 
                    string Original_clie_bairro, 
                    string Original_clie_cidade, 
                    string Original_clie_cep, 
                    string Original_clie_uf, 
                    string Original_clie_sexo, 
                    int clie_cd) {
            if ((clie_nm == null)) {
                throw new global::System.ArgumentNullException("clie_nm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(clie_nm));
            }
            if ((clie_snm == null)) {
                throw new global::System.ArgumentNullException("clie_snm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(clie_snm));
            }
            if ((clie_cpf == null)) {
                throw new global::System.ArgumentNullException("clie_cpf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(clie_cpf));
            }
            if ((clie_rg == null)) {
                throw new global::System.ArgumentNullException("clie_rg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(clie_rg));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(clie_dtnasc));
            if ((clie_end == null)) {
                throw new global::System.ArgumentNullException("clie_end");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(clie_end));
            }
            if ((clie_email == null)) {
                throw new global::System.ArgumentNullException("clie_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(clie_email));
            }
            if ((clie_telefone == null)) {
                throw new global::System.ArgumentNullException("clie_telefone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(clie_telefone));
            }
            if ((clie_celular == null)) {
                throw new global::System.ArgumentNullException("clie_celular");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(clie_celular));
            }
            if ((clie_numcasa == null)) {
                throw new global::System.ArgumentNullException("clie_numcasa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(clie_numcasa));
            }
            if ((clie_bairro == null)) {
                throw new global::System.ArgumentNullException("clie_bairro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(clie_bairro));
            }
            if ((clie_cidade == null)) {
                throw new global::System.ArgumentNullException("clie_cidade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(clie_cidade));
            }
            if ((clie_cep == null)) {
                throw new global::System.ArgumentNullException("clie_cep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(clie_cep));
            }
            if ((clie_uf == null)) {
                throw new global::System.ArgumentNullException("clie_uf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(clie_uf));
            }
            if ((clie_sexo == null)) {
                throw new global::System.ArgumentNullException("clie_sexo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(clie_sexo));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_clie_cd));
            if ((Original_clie_nm == null)) {
                throw new global::System.ArgumentNullException("Original_clie_nm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_clie_nm));
            }
            if ((Original_clie_snm == null)) {
                throw new global::System.ArgumentNullException("Original_clie_snm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_clie_snm));
            }
            if ((Original_clie_cpf == null)) {
                throw new global::System.ArgumentNullException("Original_clie_cpf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_clie_cpf));
            }
            if ((Original_clie_rg == null)) {
                throw new global::System.ArgumentNullException("Original_clie_rg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_clie_rg));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_clie_dtnasc));
            if ((Original_clie_end == null)) {
                throw new global::System.ArgumentNullException("Original_clie_end");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_clie_end));
            }
            if ((Original_clie_email == null)) {
                throw new global::System.ArgumentNullException("Original_clie_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_clie_email));
            }
            if ((Original_clie_telefone == null)) {
                throw new global::System.ArgumentNullException("Original_clie_telefone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_clie_telefone));
            }
            if ((Original_clie_celular == null)) {
                throw new global::System.ArgumentNullException("Original_clie_celular");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_clie_celular));
            }
            if ((Original_clie_numcasa == null)) {
                throw new global::System.ArgumentNullException("Original_clie_numcasa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_clie_numcasa));
            }
            if ((Original_clie_bairro == null)) {
                throw new global::System.ArgumentNullException("Original_clie_bairro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_clie_bairro));
            }
            if ((Original_clie_cidade == null)) {
                throw new global::System.ArgumentNullException("Original_clie_cidade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_clie_cidade));
            }
            if ((Original_clie_cep == null)) {
                throw new global::System.ArgumentNullException("Original_clie_cep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_clie_cep));
            }
            if ((Original_clie_uf == null)) {
                throw new global::System.ArgumentNullException("Original_clie_uf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_clie_uf));
            }
            if ((Original_clie_sexo == null)) {
                throw new global::System.ArgumentNullException("Original_clie_sexo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_clie_sexo));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(clie_cd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string clie_nm, 
                    string clie_snm, 
                    string clie_cpf, 
                    string clie_rg, 
                    System.DateTime clie_dtnasc, 
                    string clie_end, 
                    string clie_email, 
                    string clie_telefone, 
                    string clie_celular, 
                    string clie_numcasa, 
                    string clie_bairro, 
                    string clie_cidade, 
                    string clie_cep, 
                    string clie_uf, 
                    string clie_sexo, 
                    int Original_clie_cd, 
                    string Original_clie_nm, 
                    string Original_clie_snm, 
                    string Original_clie_cpf, 
                    string Original_clie_rg, 
                    System.DateTime Original_clie_dtnasc, 
                    string Original_clie_end, 
                    string Original_clie_email, 
                    string Original_clie_telefone, 
                    string Original_clie_celular, 
                    string Original_clie_numcasa, 
                    string Original_clie_bairro, 
                    string Original_clie_cidade, 
                    string Original_clie_cep, 
                    string Original_clie_uf, 
                    string Original_clie_sexo) {
            return this.Update(clie_nm, clie_snm, clie_cpf, clie_rg, clie_dtnasc, clie_end, clie_email, clie_telefone, clie_celular, clie_numcasa, clie_bairro, clie_cidade, clie_cep, clie_uf, clie_sexo, Original_clie_cd, Original_clie_nm, Original_clie_snm, Original_clie_cpf, Original_clie_rg, Original_clie_dtnasc, Original_clie_end, Original_clie_email, Original_clie_telefone, Original_clie_celular, Original_clie_numcasa, Original_clie_bairro, Original_clie_cidade, Original_clie_cep, Original_clie_uf, Original_clie_sexo, Original_clie_cd);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class estoqueTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public estoqueTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "estoque";
            tableMapping.ColumnMappings.Add("Est_cd", "Est_cd");
            tableMapping.ColumnMappings.Add("Med_cd", "Med_cd");
            tableMapping.ColumnMappings.Add("Med_desc", "Med_desc");
            tableMapping.ColumnMappings.Add("Est_DtEntrada", "Est_DtEntrada");
            tableMapping.ColumnMappings.Add("Est_Saida", "Est_Saida");
            tableMapping.ColumnMappings.Add("Est_QtEntrada", "Est_QtEntrada");
            tableMapping.ColumnMappings.Add("Est_QtSaida", "Est_QtSaida");
            tableMapping.ColumnMappings.Add("Fabri_cd", "Fabri_cd");
            tableMapping.ColumnMappings.Add("Fabri_RSocial", "Fabri_RSocial");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [farm].[estoque] WHERE (([Est_cd] = @Original_Est_cd) AND ((@IsNull_Med_cd = 1 AND [Med_cd] IS NULL) OR ([Med_cd] = @Original_Med_cd)) AND ([Med_desc] = @Original_Med_desc) AND ([Est_DtEntrada] = @Original_Est_DtEntrada) AND ([Est_Saida] = @Original_Est_Saida) AND ([Est_QtEntrada] = @Original_Est_QtEntrada) AND ([Est_QtSaida] = @Original_Est_QtSaida) AND ((@IsNull_Fabri_cd = 1 AND [Fabri_cd] IS NULL) OR ([Fabri_cd] = @Original_Fabri_cd)) AND ([Fabri_RSocial] = @Original_Fabri_RSocial))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Med_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_DtEntrada", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_DtEntrada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_Saida", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_Saida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_QtEntrada", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtEntrada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_QtSaida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtSaida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_cd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fabri_RSocial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_RSocial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [farm].[estoque] ([Med_cd], [Med_desc], [Est_DtEntrada], [Est_Saida], [Est_QtEntrada], [Est_QtSaida], [Fabri_cd], [Fabri_RSocial]) VALUES (@Med_cd, @Med_desc, @Est_DtEntrada, @Est_Saida, @Est_QtEntrada, @Est_QtSaida, @Fabri_cd, @Fabri_RSocial);
SELECT Est_cd, Med_cd, Med_desc, Est_DtEntrada, Est_Saida, Est_QtEntrada, Est_QtSaida, Fabri_cd, Fabri_RSocial FROM farm.estoque WHERE (Est_cd = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_DtEntrada", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_DtEntrada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_Saida", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_Saida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_QtEntrada", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtEntrada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_QtSaida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtSaida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fabri_RSocial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_RSocial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [farm].[estoque] SET [Med_cd] = @Med_cd, [Med_desc] = @Med_desc, [Est_DtEntrada] = @Est_DtEntrada, [Est_Saida] = @Est_Saida, [Est_QtEntrada] = @Est_QtEntrada, [Est_QtSaida] = @Est_QtSaida, [Fabri_cd] = @Fabri_cd, [Fabri_RSocial] = @Fabri_RSocial WHERE (([Est_cd] = @Original_Est_cd) AND ((@IsNull_Med_cd = 1 AND [Med_cd] IS NULL) OR ([Med_cd] = @Original_Med_cd)) AND ([Med_desc] = @Original_Med_desc) AND ([Est_DtEntrada] = @Original_Est_DtEntrada) AND ([Est_Saida] = @Original_Est_Saida) AND ([Est_QtEntrada] = @Original_Est_QtEntrada) AND ([Est_QtSaida] = @Original_Est_QtSaida) AND ((@IsNull_Fabri_cd = 1 AND [Fabri_cd] IS NULL) OR ([Fabri_cd] = @Original_Fabri_cd)) AND ([Fabri_RSocial] = @Original_Fabri_RSocial));
SELECT Est_cd, Med_cd, Med_desc, Est_DtEntrada, Est_Saida, Est_QtEntrada, Est_QtSaida, Fabri_cd, Fabri_RSocial FROM farm.estoque WHERE (Est_cd = @Est_cd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_DtEntrada", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_DtEntrada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_Saida", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_Saida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_QtEntrada", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtEntrada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_QtSaida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtSaida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fabri_RSocial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_RSocial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Med_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_DtEntrada", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_DtEntrada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_Saida", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_Saida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_QtEntrada", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtEntrada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Est_QtSaida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Est_QtSaida", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_cd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fabri_RSocial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fabri_RSocial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Est_cd", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Est_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FarmaVital.Properties.Settings.Default.FarmaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Est_cd, Med_cd, Med_desc, Est_DtEntrada, Est_Saida, Est_QtEntrada, Est_QtS" +
                "aida, Fabri_cd, Fabri_RSocial FROM farm.estoque";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FarmaDataSet.estoqueDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FarmaDataSet.estoqueDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FarmaDataSet.estoqueDataTable dataTable = new FarmaDataSet.estoqueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet.estoqueDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "estoque");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Est_cd, global::System.Nullable<int> Original_Med_cd, string Original_Med_desc, System.DateTime Original_Est_DtEntrada, System.DateTime Original_Est_Saida, string Original_Est_QtEntrada, string Original_Est_QtSaida, global::System.Nullable<int> Original_Fabri_cd, string Original_Fabri_RSocial) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Est_cd));
            if ((Original_Med_cd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Med_cd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Med_desc == null)) {
                throw new global::System.ArgumentNullException("Original_Med_desc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Med_desc));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Est_DtEntrada));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Est_Saida));
            if ((Original_Est_QtEntrada == null)) {
                throw new global::System.ArgumentNullException("Original_Est_QtEntrada");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Est_QtEntrada));
            }
            if ((Original_Est_QtSaida == null)) {
                throw new global::System.ArgumentNullException("Original_Est_QtSaida");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Est_QtSaida));
            }
            if ((Original_Fabri_cd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Fabri_cd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Fabri_RSocial == null)) {
                throw new global::System.ArgumentNullException("Original_Fabri_RSocial");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Fabri_RSocial));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> Med_cd, string Med_desc, System.DateTime Est_DtEntrada, System.DateTime Est_Saida, string Est_QtEntrada, string Est_QtSaida, global::System.Nullable<int> Fabri_cd, string Fabri_RSocial) {
            if ((Med_cd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Med_cd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Med_desc == null)) {
                throw new global::System.ArgumentNullException("Med_desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Med_desc));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Est_DtEntrada));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Est_Saida));
            if ((Est_QtEntrada == null)) {
                throw new global::System.ArgumentNullException("Est_QtEntrada");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Est_QtEntrada));
            }
            if ((Est_QtSaida == null)) {
                throw new global::System.ArgumentNullException("Est_QtSaida");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Est_QtSaida));
            }
            if ((Fabri_cd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Fabri_cd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Fabri_RSocial == null)) {
                throw new global::System.ArgumentNullException("Fabri_RSocial");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Fabri_RSocial));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Med_cd, 
                    string Med_desc, 
                    System.DateTime Est_DtEntrada, 
                    System.DateTime Est_Saida, 
                    string Est_QtEntrada, 
                    string Est_QtSaida, 
                    global::System.Nullable<int> Fabri_cd, 
                    string Fabri_RSocial, 
                    int Original_Est_cd, 
                    global::System.Nullable<int> Original_Med_cd, 
                    string Original_Med_desc, 
                    System.DateTime Original_Est_DtEntrada, 
                    System.DateTime Original_Est_Saida, 
                    string Original_Est_QtEntrada, 
                    string Original_Est_QtSaida, 
                    global::System.Nullable<int> Original_Fabri_cd, 
                    string Original_Fabri_RSocial, 
                    int Est_cd) {
            if ((Med_cd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Med_cd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Med_desc == null)) {
                throw new global::System.ArgumentNullException("Med_desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Med_desc));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Est_DtEntrada));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Est_Saida));
            if ((Est_QtEntrada == null)) {
                throw new global::System.ArgumentNullException("Est_QtEntrada");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Est_QtEntrada));
            }
            if ((Est_QtSaida == null)) {
                throw new global::System.ArgumentNullException("Est_QtSaida");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Est_QtSaida));
            }
            if ((Fabri_cd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Fabri_cd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Fabri_RSocial == null)) {
                throw new global::System.ArgumentNullException("Fabri_RSocial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Fabri_RSocial));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Est_cd));
            if ((Original_Med_cd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Med_cd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Med_desc == null)) {
                throw new global::System.ArgumentNullException("Original_Med_desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Med_desc));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Est_DtEntrada));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Est_Saida));
            if ((Original_Est_QtEntrada == null)) {
                throw new global::System.ArgumentNullException("Original_Est_QtEntrada");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Est_QtEntrada));
            }
            if ((Original_Est_QtSaida == null)) {
                throw new global::System.ArgumentNullException("Original_Est_QtSaida");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Est_QtSaida));
            }
            if ((Original_Fabri_cd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Fabri_cd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Fabri_RSocial == null)) {
                throw new global::System.ArgumentNullException("Original_Fabri_RSocial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Fabri_RSocial));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Est_cd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Med_cd, 
                    string Med_desc, 
                    System.DateTime Est_DtEntrada, 
                    System.DateTime Est_Saida, 
                    string Est_QtEntrada, 
                    string Est_QtSaida, 
                    global::System.Nullable<int> Fabri_cd, 
                    string Fabri_RSocial, 
                    int Original_Est_cd, 
                    global::System.Nullable<int> Original_Med_cd, 
                    string Original_Med_desc, 
                    System.DateTime Original_Est_DtEntrada, 
                    System.DateTime Original_Est_Saida, 
                    string Original_Est_QtEntrada, 
                    string Original_Est_QtSaida, 
                    global::System.Nullable<int> Original_Fabri_cd, 
                    string Original_Fabri_RSocial) {
            return this.Update(Med_cd, Med_desc, Est_DtEntrada, Est_Saida, Est_QtEntrada, Est_QtSaida, Fabri_cd, Fabri_RSocial, Original_Est_cd, Original_Med_cd, Original_Med_desc, Original_Est_DtEntrada, Original_Est_Saida, Original_Est_QtEntrada, Original_Est_QtSaida, Original_Fabri_cd, Original_Fabri_RSocial, Original_Est_cd);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class fabricanteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public fabricanteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "fabricante";
            tableMapping.ColumnMappings.Add("fabri_cd", "fabri_cd");
            tableMapping.ColumnMappings.Add("fabri_nmfan", "fabri_nmfan");
            tableMapping.ColumnMappings.Add("fabri_RSocail", "fabri_RSocail");
            tableMapping.ColumnMappings.Add("fabri_cnpj", "fabri_cnpj");
            tableMapping.ColumnMappings.Add("fabri_IscEst", "fabri_IscEst");
            tableMapping.ColumnMappings.Add("fabri_IsMunicipal", "fabri_IsMunicipal");
            tableMapping.ColumnMappings.Add("fabri_repre", "fabri_repre");
            tableMapping.ColumnMappings.Add("fabri_end", "fabri_end");
            tableMapping.ColumnMappings.Add("fabri_num", "fabri_num");
            tableMapping.ColumnMappings.Add("fabri_cep", "fabri_cep");
            tableMapping.ColumnMappings.Add("fabri_complemento", "fabri_complemento");
            tableMapping.ColumnMappings.Add("fabri_bairro", "fabri_bairro");
            tableMapping.ColumnMappings.Add("fabri_cidade", "fabri_cidade");
            tableMapping.ColumnMappings.Add("fabri_estado", "fabri_estado");
            tableMapping.ColumnMappings.Add("fabri_tel1", "fabri_tel1");
            tableMapping.ColumnMappings.Add("fabri_tel2", "fabri_tel2");
            tableMapping.ColumnMappings.Add("fabri_email", "fabri_email");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [farm].[fabricante] WHERE (([fabri_cd] = @Original_fabri_cd) AND ([fabri_nmfan] = @Original_fabri_nmfan) AND ([fabri_RSocail] = @Original_fabri_RSocail) AND ([fabri_cnpj] = @Original_fabri_cnpj) AND ([fabri_IscEst] = @Original_fabri_IscEst) AND ([fabri_IsMunicipal] = @Original_fabri_IsMunicipal) AND ([fabri_repre] = @Original_fabri_repre) AND ([fabri_end] = @Original_fabri_end) AND ([fabri_num] = @Original_fabri_num) AND ([fabri_cep] = @Original_fabri_cep) AND ([fabri_complemento] = @Original_fabri_complemento) AND ([fabri_bairro] = @Original_fabri_bairro) AND ([fabri_cidade] = @Original_fabri_cidade) AND ([fabri_estado] = @Original_fabri_estado) AND ([fabri_tel1] = @Original_fabri_tel1) AND ([fabri_tel2] = @Original_fabri_tel2) AND ([fabri_email] = @Original_fabri_email))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_nmfan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_nmfan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_RSocail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_RSocail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cnpj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cnpj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_IscEst", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IscEst", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_IsMunicipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IsMunicipal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_repre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_repre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_end", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_complemento", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_complemento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_tel1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_tel2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [farm].[fabricante] ([fabri_nmfan], [fabri_RSocail], [fabri_cnpj], [fabri_IscEst], [fabri_IsMunicipal], [fabri_repre], [fabri_end], [fabri_num], [fabri_cep], [fabri_complemento], [fabri_bairro], [fabri_cidade], [fabri_estado], [fabri_tel1], [fabri_tel2], [fabri_email]) VALUES (@fabri_nmfan, @fabri_RSocail, @fabri_cnpj, @fabri_IscEst, @fabri_IsMunicipal, @fabri_repre, @fabri_end, @fabri_num, @fabri_cep, @fabri_complemento, @fabri_bairro, @fabri_cidade, @fabri_estado, @fabri_tel1, @fabri_tel2, @fabri_email);
SELECT fabri_cd, fabri_nmfan, fabri_RSocail, fabri_cnpj, fabri_IscEst, fabri_IsMunicipal, fabri_repre, fabri_end, fabri_num, fabri_cep, fabri_complemento, fabri_bairro, fabri_cidade, fabri_estado, fabri_tel1, fabri_tel2, fabri_email FROM farm.fabricante WHERE (fabri_cd = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_nmfan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_nmfan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_RSocail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_RSocail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_cnpj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cnpj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_IscEst", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IscEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_IsMunicipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IsMunicipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_repre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_repre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_end", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_complemento", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_complemento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_tel1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_tel2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [farm].[fabricante] SET [fabri_nmfan] = @fabri_nmfan, [fabri_RSocail] = @f" +
                "abri_RSocail, [fabri_cnpj] = @fabri_cnpj, [fabri_IscEst] = @fabri_IscEst, [fabri" +
                "_IsMunicipal] = @fabri_IsMunicipal, [fabri_repre] = @fabri_repre, [fabri_end] = " +
                "@fabri_end, [fabri_num] = @fabri_num, [fabri_cep] = @fabri_cep, [fabri_complemen" +
                "to] = @fabri_complemento, [fabri_bairro] = @fabri_bairro, [fabri_cidade] = @fabr" +
                "i_cidade, [fabri_estado] = @fabri_estado, [fabri_tel1] = @fabri_tel1, [fabri_tel" +
                "2] = @fabri_tel2, [fabri_email] = @fabri_email WHERE (([fabri_cd] = @Original_fa" +
                "bri_cd) AND ([fabri_nmfan] = @Original_fabri_nmfan) AND ([fabri_RSocail] = @Orig" +
                "inal_fabri_RSocail) AND ([fabri_cnpj] = @Original_fabri_cnpj) AND ([fabri_IscEst" +
                "] = @Original_fabri_IscEst) AND ([fabri_IsMunicipal] = @Original_fabri_IsMunicip" +
                "al) AND ([fabri_repre] = @Original_fabri_repre) AND ([fabri_end] = @Original_fab" +
                "ri_end) AND ([fabri_num] = @Original_fabri_num) AND ([fabri_cep] = @Original_fab" +
                "ri_cep) AND ([fabri_complemento] = @Original_fabri_complemento) AND ([fabri_bair" +
                "ro] = @Original_fabri_bairro) AND ([fabri_cidade] = @Original_fabri_cidade) AND " +
                "([fabri_estado] = @Original_fabri_estado) AND ([fabri_tel1] = @Original_fabri_te" +
                "l1) AND ([fabri_tel2] = @Original_fabri_tel2) AND ([fabri_email] = @Original_fab" +
                "ri_email));\r\nSELECT fabri_cd, fabri_nmfan, fabri_RSocail, fabri_cnpj, fabri_IscE" +
                "st, fabri_IsMunicipal, fabri_repre, fabri_end, fabri_num, fabri_cep, fabri_compl" +
                "emento, fabri_bairro, fabri_cidade, fabri_estado, fabri_tel1, fabri_tel2, fabri_" +
                "email FROM farm.fabricante WHERE (fabri_cd = @fabri_cd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_nmfan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_nmfan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_RSocail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_RSocail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_cnpj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cnpj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_IscEst", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IscEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_IsMunicipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IsMunicipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_repre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_repre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_end", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_complemento", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_complemento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_tel1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_tel2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_nmfan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_nmfan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_RSocail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_RSocail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cnpj", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cnpj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_IscEst", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IscEst", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_IsMunicipal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_IsMunicipal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_repre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_repre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_end", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_num", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_complemento", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_complemento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_tel1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_tel2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_tel2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fabri_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fabri_cd", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "fabri_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FarmaVital.Properties.Settings.Default.FarmaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT fabri_cd, fabri_nmfan, fabri_RSocail, fabri_cnpj, fabri_IscEst, fabri_IsMu" +
                "nicipal, fabri_repre, fabri_end, fabri_num, fabri_cep, fabri_complemento, fabri_" +
                "bairro, fabri_cidade, fabri_estado, fabri_tel1, fabri_tel2, fabri_email FROM far" +
                "m.fabricante";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FarmaDataSet.fabricanteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FarmaDataSet.fabricanteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FarmaDataSet.fabricanteDataTable dataTable = new FarmaDataSet.fabricanteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet.fabricanteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "fabricante");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_fabri_cd, 
                    string Original_fabri_nmfan, 
                    string Original_fabri_RSocail, 
                    string Original_fabri_cnpj, 
                    string Original_fabri_IscEst, 
                    string Original_fabri_IsMunicipal, 
                    string Original_fabri_repre, 
                    string Original_fabri_end, 
                    string Original_fabri_num, 
                    string Original_fabri_cep, 
                    string Original_fabri_complemento, 
                    string Original_fabri_bairro, 
                    string Original_fabri_cidade, 
                    string Original_fabri_estado, 
                    string Original_fabri_tel1, 
                    string Original_fabri_tel2, 
                    string Original_fabri_email) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_fabri_cd));
            if ((Original_fabri_nmfan == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_nmfan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_fabri_nmfan));
            }
            if ((Original_fabri_RSocail == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_RSocail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_fabri_RSocail));
            }
            if ((Original_fabri_cnpj == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_cnpj");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_fabri_cnpj));
            }
            if ((Original_fabri_IscEst == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_IscEst");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_fabri_IscEst));
            }
            if ((Original_fabri_IsMunicipal == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_IsMunicipal");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_fabri_IsMunicipal));
            }
            if ((Original_fabri_repre == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_repre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_fabri_repre));
            }
            if ((Original_fabri_end == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_end");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_fabri_end));
            }
            if ((Original_fabri_num == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_num");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_fabri_num));
            }
            if ((Original_fabri_cep == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_cep");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_fabri_cep));
            }
            if ((Original_fabri_complemento == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_complemento");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_fabri_complemento));
            }
            if ((Original_fabri_bairro == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_bairro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_fabri_bairro));
            }
            if ((Original_fabri_cidade == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_cidade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_fabri_cidade));
            }
            if ((Original_fabri_estado == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_estado");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_fabri_estado));
            }
            if ((Original_fabri_tel1 == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_tel1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_fabri_tel1));
            }
            if ((Original_fabri_tel2 == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_tel2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_fabri_tel2));
            }
            if ((Original_fabri_email == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_fabri_email));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string fabri_nmfan, 
                    string fabri_RSocail, 
                    string fabri_cnpj, 
                    string fabri_IscEst, 
                    string fabri_IsMunicipal, 
                    string fabri_repre, 
                    string fabri_end, 
                    string fabri_num, 
                    string fabri_cep, 
                    string fabri_complemento, 
                    string fabri_bairro, 
                    string fabri_cidade, 
                    string fabri_estado, 
                    string fabri_tel1, 
                    string fabri_tel2, 
                    string fabri_email) {
            if ((fabri_nmfan == null)) {
                throw new global::System.ArgumentNullException("fabri_nmfan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(fabri_nmfan));
            }
            if ((fabri_RSocail == null)) {
                throw new global::System.ArgumentNullException("fabri_RSocail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(fabri_RSocail));
            }
            if ((fabri_cnpj == null)) {
                throw new global::System.ArgumentNullException("fabri_cnpj");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(fabri_cnpj));
            }
            if ((fabri_IscEst == null)) {
                throw new global::System.ArgumentNullException("fabri_IscEst");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(fabri_IscEst));
            }
            if ((fabri_IsMunicipal == null)) {
                throw new global::System.ArgumentNullException("fabri_IsMunicipal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(fabri_IsMunicipal));
            }
            if ((fabri_repre == null)) {
                throw new global::System.ArgumentNullException("fabri_repre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(fabri_repre));
            }
            if ((fabri_end == null)) {
                throw new global::System.ArgumentNullException("fabri_end");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(fabri_end));
            }
            if ((fabri_num == null)) {
                throw new global::System.ArgumentNullException("fabri_num");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(fabri_num));
            }
            if ((fabri_cep == null)) {
                throw new global::System.ArgumentNullException("fabri_cep");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(fabri_cep));
            }
            if ((fabri_complemento == null)) {
                throw new global::System.ArgumentNullException("fabri_complemento");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(fabri_complemento));
            }
            if ((fabri_bairro == null)) {
                throw new global::System.ArgumentNullException("fabri_bairro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(fabri_bairro));
            }
            if ((fabri_cidade == null)) {
                throw new global::System.ArgumentNullException("fabri_cidade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(fabri_cidade));
            }
            if ((fabri_estado == null)) {
                throw new global::System.ArgumentNullException("fabri_estado");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(fabri_estado));
            }
            if ((fabri_tel1 == null)) {
                throw new global::System.ArgumentNullException("fabri_tel1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(fabri_tel1));
            }
            if ((fabri_tel2 == null)) {
                throw new global::System.ArgumentNullException("fabri_tel2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(fabri_tel2));
            }
            if ((fabri_email == null)) {
                throw new global::System.ArgumentNullException("fabri_email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(fabri_email));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string fabri_nmfan, 
                    string fabri_RSocail, 
                    string fabri_cnpj, 
                    string fabri_IscEst, 
                    string fabri_IsMunicipal, 
                    string fabri_repre, 
                    string fabri_end, 
                    string fabri_num, 
                    string fabri_cep, 
                    string fabri_complemento, 
                    string fabri_bairro, 
                    string fabri_cidade, 
                    string fabri_estado, 
                    string fabri_tel1, 
                    string fabri_tel2, 
                    string fabri_email, 
                    int Original_fabri_cd, 
                    string Original_fabri_nmfan, 
                    string Original_fabri_RSocail, 
                    string Original_fabri_cnpj, 
                    string Original_fabri_IscEst, 
                    string Original_fabri_IsMunicipal, 
                    string Original_fabri_repre, 
                    string Original_fabri_end, 
                    string Original_fabri_num, 
                    string Original_fabri_cep, 
                    string Original_fabri_complemento, 
                    string Original_fabri_bairro, 
                    string Original_fabri_cidade, 
                    string Original_fabri_estado, 
                    string Original_fabri_tel1, 
                    string Original_fabri_tel2, 
                    string Original_fabri_email, 
                    int fabri_cd) {
            if ((fabri_nmfan == null)) {
                throw new global::System.ArgumentNullException("fabri_nmfan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(fabri_nmfan));
            }
            if ((fabri_RSocail == null)) {
                throw new global::System.ArgumentNullException("fabri_RSocail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(fabri_RSocail));
            }
            if ((fabri_cnpj == null)) {
                throw new global::System.ArgumentNullException("fabri_cnpj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(fabri_cnpj));
            }
            if ((fabri_IscEst == null)) {
                throw new global::System.ArgumentNullException("fabri_IscEst");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(fabri_IscEst));
            }
            if ((fabri_IsMunicipal == null)) {
                throw new global::System.ArgumentNullException("fabri_IsMunicipal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(fabri_IsMunicipal));
            }
            if ((fabri_repre == null)) {
                throw new global::System.ArgumentNullException("fabri_repre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(fabri_repre));
            }
            if ((fabri_end == null)) {
                throw new global::System.ArgumentNullException("fabri_end");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(fabri_end));
            }
            if ((fabri_num == null)) {
                throw new global::System.ArgumentNullException("fabri_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(fabri_num));
            }
            if ((fabri_cep == null)) {
                throw new global::System.ArgumentNullException("fabri_cep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(fabri_cep));
            }
            if ((fabri_complemento == null)) {
                throw new global::System.ArgumentNullException("fabri_complemento");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(fabri_complemento));
            }
            if ((fabri_bairro == null)) {
                throw new global::System.ArgumentNullException("fabri_bairro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(fabri_bairro));
            }
            if ((fabri_cidade == null)) {
                throw new global::System.ArgumentNullException("fabri_cidade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(fabri_cidade));
            }
            if ((fabri_estado == null)) {
                throw new global::System.ArgumentNullException("fabri_estado");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(fabri_estado));
            }
            if ((fabri_tel1 == null)) {
                throw new global::System.ArgumentNullException("fabri_tel1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(fabri_tel1));
            }
            if ((fabri_tel2 == null)) {
                throw new global::System.ArgumentNullException("fabri_tel2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(fabri_tel2));
            }
            if ((fabri_email == null)) {
                throw new global::System.ArgumentNullException("fabri_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(fabri_email));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_fabri_cd));
            if ((Original_fabri_nmfan == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_nmfan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_fabri_nmfan));
            }
            if ((Original_fabri_RSocail == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_RSocail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_fabri_RSocail));
            }
            if ((Original_fabri_cnpj == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_cnpj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_fabri_cnpj));
            }
            if ((Original_fabri_IscEst == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_IscEst");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_fabri_IscEst));
            }
            if ((Original_fabri_IsMunicipal == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_IsMunicipal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_fabri_IsMunicipal));
            }
            if ((Original_fabri_repre == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_repre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_fabri_repre));
            }
            if ((Original_fabri_end == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_end");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_fabri_end));
            }
            if ((Original_fabri_num == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_num");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_fabri_num));
            }
            if ((Original_fabri_cep == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_cep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_fabri_cep));
            }
            if ((Original_fabri_complemento == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_complemento");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_fabri_complemento));
            }
            if ((Original_fabri_bairro == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_bairro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_fabri_bairro));
            }
            if ((Original_fabri_cidade == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_cidade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_fabri_cidade));
            }
            if ((Original_fabri_estado == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_estado");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_fabri_estado));
            }
            if ((Original_fabri_tel1 == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_tel1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_fabri_tel1));
            }
            if ((Original_fabri_tel2 == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_tel2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_fabri_tel2));
            }
            if ((Original_fabri_email == null)) {
                throw new global::System.ArgumentNullException("Original_fabri_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_fabri_email));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(fabri_cd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string fabri_nmfan, 
                    string fabri_RSocail, 
                    string fabri_cnpj, 
                    string fabri_IscEst, 
                    string fabri_IsMunicipal, 
                    string fabri_repre, 
                    string fabri_end, 
                    string fabri_num, 
                    string fabri_cep, 
                    string fabri_complemento, 
                    string fabri_bairro, 
                    string fabri_cidade, 
                    string fabri_estado, 
                    string fabri_tel1, 
                    string fabri_tel2, 
                    string fabri_email, 
                    int Original_fabri_cd, 
                    string Original_fabri_nmfan, 
                    string Original_fabri_RSocail, 
                    string Original_fabri_cnpj, 
                    string Original_fabri_IscEst, 
                    string Original_fabri_IsMunicipal, 
                    string Original_fabri_repre, 
                    string Original_fabri_end, 
                    string Original_fabri_num, 
                    string Original_fabri_cep, 
                    string Original_fabri_complemento, 
                    string Original_fabri_bairro, 
                    string Original_fabri_cidade, 
                    string Original_fabri_estado, 
                    string Original_fabri_tel1, 
                    string Original_fabri_tel2, 
                    string Original_fabri_email) {
            return this.Update(fabri_nmfan, fabri_RSocail, fabri_cnpj, fabri_IscEst, fabri_IsMunicipal, fabri_repre, fabri_end, fabri_num, fabri_cep, fabri_complemento, fabri_bairro, fabri_cidade, fabri_estado, fabri_tel1, fabri_tel2, fabri_email, Original_fabri_cd, Original_fabri_nmfan, Original_fabri_RSocail, Original_fabri_cnpj, Original_fabri_IscEst, Original_fabri_IsMunicipal, Original_fabri_repre, Original_fabri_end, Original_fabri_num, Original_fabri_cep, Original_fabri_complemento, Original_fabri_bairro, Original_fabri_cidade, Original_fabri_estado, Original_fabri_tel1, Original_fabri_tel2, Original_fabri_email, Original_fabri_cd);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class funcionariosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public funcionariosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "funcionarios";
            tableMapping.ColumnMappings.Add("Fun_cd", "Fun_cd");
            tableMapping.ColumnMappings.Add("Fun_nome", "Fun_nome");
            tableMapping.ColumnMappings.Add("Fun_sobrenme", "Fun_sobrenme");
            tableMapping.ColumnMappings.Add("Fun_cpf", "Fun_cpf");
            tableMapping.ColumnMappings.Add("Fun_rg", "Fun_rg");
            tableMapping.ColumnMappings.Add("Fun_dtNasc", "Fun_dtNasc");
            tableMapping.ColumnMappings.Add("Fun_end", "Fun_end");
            tableMapping.ColumnMappings.Add("Fun_numcasa", "Fun_numcasa");
            tableMapping.ColumnMappings.Add("Fun_telefone", "Fun_telefone");
            tableMapping.ColumnMappings.Add("Fun_bairro", "Fun_bairro");
            tableMapping.ColumnMappings.Add("Fun_cidade", "Fun_cidade");
            tableMapping.ColumnMappings.Add("Fun_uf", "Fun_uf");
            tableMapping.ColumnMappings.Add("Fun_cep", "Fun_cep");
            tableMapping.ColumnMappings.Add("Fun_cargo", "Fun_cargo");
            tableMapping.ColumnMappings.Add("Fun_user", "Fun_user");
            tableMapping.ColumnMappings.Add("Fun_senha", "Fun_senha");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [farm].[funcionarios] WHERE (([Fun_cd] = @Original_Fun_cd) AND ([Fun_nome] = @Original_Fun_nome) AND ([Fun_sobrenme] = @Original_Fun_sobrenme) AND ([Fun_cpf] = @Original_Fun_cpf) AND ([Fun_rg] = @Original_Fun_rg) AND ([Fun_dtNasc] = @Original_Fun_dtNasc) AND ([Fun_end] = @Original_Fun_end) AND ([Fun_numcasa] = @Original_Fun_numcasa) AND ([Fun_telefone] = @Original_Fun_telefone) AND ([Fun_bairro] = @Original_Fun_bairro) AND ([Fun_cidade] = @Original_Fun_cidade) AND ([Fun_uf] = @Original_Fun_uf) AND ([Fun_cep] = @Original_Fun_cep) AND ([Fun_cargo] = @Original_Fun_cargo) AND ([Fun_user] = @Original_Fun_user) AND ([Fun_senha] = @Original_Fun_senha))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_nome", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_nome", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_sobrenme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_sobrenme", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cpf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_rg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_dtNasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_dtNasc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_end", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_numcasa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_telefone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_uf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cargo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cargo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_senha", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_senha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [farm].[funcionarios] ([Fun_nome], [Fun_sobrenme], [Fun_cpf], [Fun_rg], [Fun_dtNasc], [Fun_end], [Fun_numcasa], [Fun_telefone], [Fun_bairro], [Fun_cidade], [Fun_uf], [Fun_cep], [Fun_cargo], [Fun_user], [Fun_senha]) VALUES (@Fun_nome, @Fun_sobrenme, @Fun_cpf, @Fun_rg, @Fun_dtNasc, @Fun_end, @Fun_numcasa, @Fun_telefone, @Fun_bairro, @Fun_cidade, @Fun_uf, @Fun_cep, @Fun_cargo, @Fun_user, @Fun_senha);
SELECT Fun_cd, Fun_nome, Fun_sobrenme, Fun_cpf, Fun_rg, Fun_dtNasc, Fun_end, Fun_numcasa, Fun_telefone, Fun_bairro, Fun_cidade, Fun_uf, Fun_cep, Fun_cargo, Fun_user, Fun_senha FROM farm.funcionarios WHERE (Fun_cd = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_nome", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_nome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_sobrenme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_sobrenme", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cpf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_rg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_dtNasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_dtNasc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_end", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_numcasa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_telefone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_uf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cargo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cargo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_senha", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_senha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [farm].[funcionarios] SET [Fun_nome] = @Fun_nome, [Fun_sobrenme] = @Fun_sobrenme, [Fun_cpf] = @Fun_cpf, [Fun_rg] = @Fun_rg, [Fun_dtNasc] = @Fun_dtNasc, [Fun_end] = @Fun_end, [Fun_numcasa] = @Fun_numcasa, [Fun_telefone] = @Fun_telefone, [Fun_bairro] = @Fun_bairro, [Fun_cidade] = @Fun_cidade, [Fun_uf] = @Fun_uf, [Fun_cep] = @Fun_cep, [Fun_cargo] = @Fun_cargo, [Fun_user] = @Fun_user, [Fun_senha] = @Fun_senha WHERE (([Fun_cd] = @Original_Fun_cd) AND ([Fun_nome] = @Original_Fun_nome) AND ([Fun_sobrenme] = @Original_Fun_sobrenme) AND ([Fun_cpf] = @Original_Fun_cpf) AND ([Fun_rg] = @Original_Fun_rg) AND ([Fun_dtNasc] = @Original_Fun_dtNasc) AND ([Fun_end] = @Original_Fun_end) AND ([Fun_numcasa] = @Original_Fun_numcasa) AND ([Fun_telefone] = @Original_Fun_telefone) AND ([Fun_bairro] = @Original_Fun_bairro) AND ([Fun_cidade] = @Original_Fun_cidade) AND ([Fun_uf] = @Original_Fun_uf) AND ([Fun_cep] = @Original_Fun_cep) AND ([Fun_cargo] = @Original_Fun_cargo) AND ([Fun_user] = @Original_Fun_user) AND ([Fun_senha] = @Original_Fun_senha));
SELECT Fun_cd, Fun_nome, Fun_sobrenme, Fun_cpf, Fun_rg, Fun_dtNasc, Fun_end, Fun_numcasa, Fun_telefone, Fun_bairro, Fun_cidade, Fun_uf, Fun_cep, Fun_cargo, Fun_user, Fun_senha FROM farm.funcionarios WHERE (Fun_cd = @Fun_cd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_nome", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_nome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_sobrenme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_sobrenme", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cpf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_rg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_dtNasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_dtNasc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_end", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_numcasa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_telefone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_bairro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cidade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_uf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cargo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cargo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_senha", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_senha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_nome", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_nome", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_sobrenme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_sobrenme", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cpf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cpf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_rg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_rg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_dtNasc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_dtNasc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_end", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_end", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_numcasa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_numcasa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_telefone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_telefone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_bairro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_bairro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cidade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cidade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_uf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_uf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cargo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cargo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_senha", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_senha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cd", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FarmaVital.Properties.Settings.Default.FarmaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Fun_cd, Fun_nome, Fun_sobrenme, Fun_cpf, Fun_rg, Fun_dtNasc, Fun_end, Fun_" +
                "numcasa, Fun_telefone, Fun_bairro, Fun_cidade, Fun_uf, Fun_cep, Fun_cargo, Fun_u" +
                "ser, Fun_senha FROM farm.funcionarios";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FarmaDataSet.funcionariosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FarmaDataSet.funcionariosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FarmaDataSet.funcionariosDataTable dataTable = new FarmaDataSet.funcionariosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet.funcionariosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "funcionarios");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Fun_cd, 
                    string Original_Fun_nome, 
                    string Original_Fun_sobrenme, 
                    string Original_Fun_cpf, 
                    string Original_Fun_rg, 
                    System.DateTime Original_Fun_dtNasc, 
                    string Original_Fun_end, 
                    string Original_Fun_numcasa, 
                    string Original_Fun_telefone, 
                    string Original_Fun_bairro, 
                    string Original_Fun_cidade, 
                    string Original_Fun_uf, 
                    string Original_Fun_cep, 
                    string Original_Fun_cargo, 
                    string Original_Fun_user, 
                    string Original_Fun_senha) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Fun_cd));
            if ((Original_Fun_nome == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_nome");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Fun_nome));
            }
            if ((Original_Fun_sobrenme == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_sobrenme");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Fun_sobrenme));
            }
            if ((Original_Fun_cpf == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cpf");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Fun_cpf));
            }
            if ((Original_Fun_rg == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_rg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Fun_rg));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Fun_dtNasc));
            if ((Original_Fun_end == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_end");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Fun_end));
            }
            if ((Original_Fun_numcasa == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_numcasa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Fun_numcasa));
            }
            if ((Original_Fun_telefone == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_telefone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Fun_telefone));
            }
            if ((Original_Fun_bairro == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_bairro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Fun_bairro));
            }
            if ((Original_Fun_cidade == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cidade");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Fun_cidade));
            }
            if ((Original_Fun_uf == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_uf");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Fun_uf));
            }
            if ((Original_Fun_cep == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cep");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Fun_cep));
            }
            if ((Original_Fun_cargo == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cargo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Fun_cargo));
            }
            if ((Original_Fun_user == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Fun_user));
            }
            if ((Original_Fun_senha == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_senha");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Fun_senha));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Fun_nome, string Fun_sobrenme, string Fun_cpf, string Fun_rg, System.DateTime Fun_dtNasc, string Fun_end, string Fun_numcasa, string Fun_telefone, string Fun_bairro, string Fun_cidade, string Fun_uf, string Fun_cep, string Fun_cargo, string Fun_user, string Fun_senha) {
            if ((Fun_nome == null)) {
                throw new global::System.ArgumentNullException("Fun_nome");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Fun_nome));
            }
            if ((Fun_sobrenme == null)) {
                throw new global::System.ArgumentNullException("Fun_sobrenme");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Fun_sobrenme));
            }
            if ((Fun_cpf == null)) {
                throw new global::System.ArgumentNullException("Fun_cpf");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Fun_cpf));
            }
            if ((Fun_rg == null)) {
                throw new global::System.ArgumentNullException("Fun_rg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Fun_rg));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Fun_dtNasc));
            if ((Fun_end == null)) {
                throw new global::System.ArgumentNullException("Fun_end");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Fun_end));
            }
            if ((Fun_numcasa == null)) {
                throw new global::System.ArgumentNullException("Fun_numcasa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Fun_numcasa));
            }
            if ((Fun_telefone == null)) {
                throw new global::System.ArgumentNullException("Fun_telefone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Fun_telefone));
            }
            if ((Fun_bairro == null)) {
                throw new global::System.ArgumentNullException("Fun_bairro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Fun_bairro));
            }
            if ((Fun_cidade == null)) {
                throw new global::System.ArgumentNullException("Fun_cidade");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Fun_cidade));
            }
            if ((Fun_uf == null)) {
                throw new global::System.ArgumentNullException("Fun_uf");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Fun_uf));
            }
            if ((Fun_cep == null)) {
                throw new global::System.ArgumentNullException("Fun_cep");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Fun_cep));
            }
            if ((Fun_cargo == null)) {
                throw new global::System.ArgumentNullException("Fun_cargo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Fun_cargo));
            }
            if ((Fun_user == null)) {
                throw new global::System.ArgumentNullException("Fun_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Fun_user));
            }
            if ((Fun_senha == null)) {
                throw new global::System.ArgumentNullException("Fun_senha");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Fun_senha));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Fun_nome, 
                    string Fun_sobrenme, 
                    string Fun_cpf, 
                    string Fun_rg, 
                    System.DateTime Fun_dtNasc, 
                    string Fun_end, 
                    string Fun_numcasa, 
                    string Fun_telefone, 
                    string Fun_bairro, 
                    string Fun_cidade, 
                    string Fun_uf, 
                    string Fun_cep, 
                    string Fun_cargo, 
                    string Fun_user, 
                    string Fun_senha, 
                    int Original_Fun_cd, 
                    string Original_Fun_nome, 
                    string Original_Fun_sobrenme, 
                    string Original_Fun_cpf, 
                    string Original_Fun_rg, 
                    System.DateTime Original_Fun_dtNasc, 
                    string Original_Fun_end, 
                    string Original_Fun_numcasa, 
                    string Original_Fun_telefone, 
                    string Original_Fun_bairro, 
                    string Original_Fun_cidade, 
                    string Original_Fun_uf, 
                    string Original_Fun_cep, 
                    string Original_Fun_cargo, 
                    string Original_Fun_user, 
                    string Original_Fun_senha, 
                    int Fun_cd) {
            if ((Fun_nome == null)) {
                throw new global::System.ArgumentNullException("Fun_nome");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Fun_nome));
            }
            if ((Fun_sobrenme == null)) {
                throw new global::System.ArgumentNullException("Fun_sobrenme");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Fun_sobrenme));
            }
            if ((Fun_cpf == null)) {
                throw new global::System.ArgumentNullException("Fun_cpf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Fun_cpf));
            }
            if ((Fun_rg == null)) {
                throw new global::System.ArgumentNullException("Fun_rg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Fun_rg));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Fun_dtNasc));
            if ((Fun_end == null)) {
                throw new global::System.ArgumentNullException("Fun_end");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Fun_end));
            }
            if ((Fun_numcasa == null)) {
                throw new global::System.ArgumentNullException("Fun_numcasa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Fun_numcasa));
            }
            if ((Fun_telefone == null)) {
                throw new global::System.ArgumentNullException("Fun_telefone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Fun_telefone));
            }
            if ((Fun_bairro == null)) {
                throw new global::System.ArgumentNullException("Fun_bairro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Fun_bairro));
            }
            if ((Fun_cidade == null)) {
                throw new global::System.ArgumentNullException("Fun_cidade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Fun_cidade));
            }
            if ((Fun_uf == null)) {
                throw new global::System.ArgumentNullException("Fun_uf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Fun_uf));
            }
            if ((Fun_cep == null)) {
                throw new global::System.ArgumentNullException("Fun_cep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Fun_cep));
            }
            if ((Fun_cargo == null)) {
                throw new global::System.ArgumentNullException("Fun_cargo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Fun_cargo));
            }
            if ((Fun_user == null)) {
                throw new global::System.ArgumentNullException("Fun_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Fun_user));
            }
            if ((Fun_senha == null)) {
                throw new global::System.ArgumentNullException("Fun_senha");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Fun_senha));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Fun_cd));
            if ((Original_Fun_nome == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_nome");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Fun_nome));
            }
            if ((Original_Fun_sobrenme == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_sobrenme");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Fun_sobrenme));
            }
            if ((Original_Fun_cpf == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cpf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Fun_cpf));
            }
            if ((Original_Fun_rg == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_rg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Fun_rg));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_Fun_dtNasc));
            if ((Original_Fun_end == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_end");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Fun_end));
            }
            if ((Original_Fun_numcasa == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_numcasa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Fun_numcasa));
            }
            if ((Original_Fun_telefone == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_telefone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Fun_telefone));
            }
            if ((Original_Fun_bairro == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_bairro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Fun_bairro));
            }
            if ((Original_Fun_cidade == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cidade");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Fun_cidade));
            }
            if ((Original_Fun_uf == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_uf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Fun_uf));
            }
            if ((Original_Fun_cep == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cep");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Fun_cep));
            }
            if ((Original_Fun_cargo == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_cargo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Fun_cargo));
            }
            if ((Original_Fun_user == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Fun_user));
            }
            if ((Original_Fun_senha == null)) {
                throw new global::System.ArgumentNullException("Original_Fun_senha");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Fun_senha));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Fun_cd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Fun_nome, 
                    string Fun_sobrenme, 
                    string Fun_cpf, 
                    string Fun_rg, 
                    System.DateTime Fun_dtNasc, 
                    string Fun_end, 
                    string Fun_numcasa, 
                    string Fun_telefone, 
                    string Fun_bairro, 
                    string Fun_cidade, 
                    string Fun_uf, 
                    string Fun_cep, 
                    string Fun_cargo, 
                    string Fun_user, 
                    string Fun_senha, 
                    int Original_Fun_cd, 
                    string Original_Fun_nome, 
                    string Original_Fun_sobrenme, 
                    string Original_Fun_cpf, 
                    string Original_Fun_rg, 
                    System.DateTime Original_Fun_dtNasc, 
                    string Original_Fun_end, 
                    string Original_Fun_numcasa, 
                    string Original_Fun_telefone, 
                    string Original_Fun_bairro, 
                    string Original_Fun_cidade, 
                    string Original_Fun_uf, 
                    string Original_Fun_cep, 
                    string Original_Fun_cargo, 
                    string Original_Fun_user, 
                    string Original_Fun_senha) {
            return this.Update(Fun_nome, Fun_sobrenme, Fun_cpf, Fun_rg, Fun_dtNasc, Fun_end, Fun_numcasa, Fun_telefone, Fun_bairro, Fun_cidade, Fun_uf, Fun_cep, Fun_cargo, Fun_user, Fun_senha, Original_Fun_cd, Original_Fun_nome, Original_Fun_sobrenme, Original_Fun_cpf, Original_Fun_rg, Original_Fun_dtNasc, Original_Fun_end, Original_Fun_numcasa, Original_Fun_telefone, Original_Fun_bairro, Original_Fun_cidade, Original_Fun_uf, Original_Fun_cep, Original_Fun_cargo, Original_Fun_user, Original_Fun_senha, Original_Fun_cd);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class medicamentosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public medicamentosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "medicamentos";
            tableMapping.ColumnMappings.Add("Med_cod", "Med_cod");
            tableMapping.ColumnMappings.Add("Med_nmMed", "Med_nmMed");
            tableMapping.ColumnMappings.Add("Med_NMed", "Med_NMed");
            tableMapping.ColumnMappings.Add("Med_desc", "Med_desc");
            tableMapping.ColumnMappings.Add("Med_categoria", "Med_categoria");
            tableMapping.ColumnMappings.Add("Med_marca", "Med_marca");
            tableMapping.ColumnMappings.Add("Med_DtFabri", "Med_DtFabri");
            tableMapping.ColumnMappings.Add("Med_DtVali", "Med_DtVali");
            tableMapping.ColumnMappings.Add("Med_qtde", "Med_qtde");
            tableMapping.ColumnMappings.Add("Med_PreçUnid", "Med_PreçUnid");
            tableMapping.ColumnMappings.Add("Med_PreçVen", "Med_PreçVen");
            tableMapping.ColumnMappings.Add("med_Lucro", "med_Lucro");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [farm].[medicamentos] WHERE (([Med_cod] = @Original_Med_cod) AND ([Med_nmMed] = @Original_Med_nmMed) AND ([Med_NMed] = @Original_Med_NMed) AND ([Med_desc] = @Original_Med_desc) AND ([Med_categoria] = @Original_Med_categoria) AND ([Med_marca] = @Original_Med_marca) AND ([Med_DtFabri] = @Original_Med_DtFabri) AND ([Med_DtVali] = @Original_Med_DtVali) AND ([Med_qtde] = @Original_Med_qtde) AND ([Med_PreçUnid] = @Original_Med_PreçUnid) AND ([Med_PreçVen] = @Original_Med_PreçVen) AND ([med_Lucro] = @Original_med_Lucro))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_cod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_nmMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_nmMed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_NMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_NMed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_categoria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_categoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_DtFabri", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtFabri", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_DtVali", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtVali", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_qtde", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_qtde", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_PreçUnid", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçUnid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_PreçVen", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçVen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_med_Lucro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med_Lucro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [farm].[medicamentos] ([Med_nmMed], [Med_NMed], [Med_desc], [Med_categoria], [Med_marca], [Med_DtFabri], [Med_DtVali], [Med_qtde], [Med_PreçUnid], [Med_PreçVen], [med_Lucro]) VALUES (@Med_nmMed, @Med_NMed, @Med_desc, @Med_categoria, @Med_marca, @Med_DtFabri, @Med_DtVali, @Med_qtde, @Med_PreçUnid, @Med_PreçVen, @med_Lucro);
SELECT Med_cod, Med_nmMed, Med_NMed, Med_desc, Med_categoria, Med_marca, Med_DtFabri, Med_DtVali, Med_qtde, Med_PreçUnid, Med_PreçVen, med_Lucro FROM farm.medicamentos WHERE (Med_cod = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_nmMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_nmMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_NMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_NMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_categoria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_categoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_DtFabri", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtFabri", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_DtVali", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtVali", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_qtde", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_qtde", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_PreçUnid", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçUnid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_PreçVen", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçVen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@med_Lucro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med_Lucro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [farm].[medicamentos] SET [Med_nmMed] = @Med_nmMed, [Med_NMed] = @Med_NMed, [Med_desc] = @Med_desc, [Med_categoria] = @Med_categoria, [Med_marca] = @Med_marca, [Med_DtFabri] = @Med_DtFabri, [Med_DtVali] = @Med_DtVali, [Med_qtde] = @Med_qtde, [Med_PreçUnid] = @Med_PreçUnid, [Med_PreçVen] = @Med_PreçVen, [med_Lucro] = @med_Lucro WHERE (([Med_cod] = @Original_Med_cod) AND ([Med_nmMed] = @Original_Med_nmMed) AND ([Med_NMed] = @Original_Med_NMed) AND ([Med_desc] = @Original_Med_desc) AND ([Med_categoria] = @Original_Med_categoria) AND ([Med_marca] = @Original_Med_marca) AND ([Med_DtFabri] = @Original_Med_DtFabri) AND ([Med_DtVali] = @Original_Med_DtVali) AND ([Med_qtde] = @Original_Med_qtde) AND ([Med_PreçUnid] = @Original_Med_PreçUnid) AND ([Med_PreçVen] = @Original_Med_PreçVen) AND ([med_Lucro] = @Original_med_Lucro));
SELECT Med_cod, Med_nmMed, Med_NMed, Med_desc, Med_categoria, Med_marca, Med_DtFabri, Med_DtVali, Med_qtde, Med_PreçUnid, Med_PreçVen, med_Lucro FROM farm.medicamentos WHERE (Med_cod = @Med_cod)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_nmMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_nmMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_NMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_NMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_categoria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_categoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_DtFabri", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtFabri", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_DtVali", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtVali", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_qtde", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_qtde", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_PreçUnid", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçUnid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_PreçVen", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçVen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@med_Lucro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med_Lucro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_cod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_nmMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_nmMed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_NMed", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_NMed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_categoria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_categoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_DtFabri", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtFabri", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_DtVali", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_DtVali", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_qtde", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_qtde", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_PreçUnid", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçUnid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Med_PreçVen", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Med_PreçVen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_med_Lucro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "med_Lucro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Med_cod", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Med_cod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FarmaVital.Properties.Settings.Default.FarmaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Med_cod, Med_nmMed, Med_NMed, Med_desc, Med_categoria, Med_marca, Med_DtFa" +
                "bri, Med_DtVali, Med_qtde, Med_PreçUnid, Med_PreçVen, med_Lucro FROM farm.medica" +
                "mentos";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FarmaDataSet.medicamentosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FarmaDataSet.medicamentosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FarmaDataSet.medicamentosDataTable dataTable = new FarmaDataSet.medicamentosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet.medicamentosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "medicamentos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Med_cod, string Original_Med_nmMed, string Original_Med_NMed, string Original_Med_desc, string Original_Med_categoria, string Original_Med_marca, System.DateTime Original_Med_DtFabri, System.DateTime Original_Med_DtVali, string Original_Med_qtde, decimal Original_Med_PreçUnid, decimal Original_Med_PreçVen, string Original_med_Lucro) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Med_cod));
            if ((Original_Med_nmMed == null)) {
                throw new global::System.ArgumentNullException("Original_Med_nmMed");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Med_nmMed));
            }
            if ((Original_Med_NMed == null)) {
                throw new global::System.ArgumentNullException("Original_Med_NMed");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Med_NMed));
            }
            if ((Original_Med_desc == null)) {
                throw new global::System.ArgumentNullException("Original_Med_desc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Med_desc));
            }
            if ((Original_Med_categoria == null)) {
                throw new global::System.ArgumentNullException("Original_Med_categoria");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Med_categoria));
            }
            if ((Original_Med_marca == null)) {
                throw new global::System.ArgumentNullException("Original_Med_marca");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Med_marca));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Med_DtFabri));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Med_DtVali));
            if ((Original_Med_qtde == null)) {
                throw new global::System.ArgumentNullException("Original_Med_qtde");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Med_qtde));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_Med_PreçUnid));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Med_PreçVen));
            if ((Original_med_Lucro == null)) {
                throw new global::System.ArgumentNullException("Original_med_Lucro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_med_Lucro));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Med_nmMed, string Med_NMed, string Med_desc, string Med_categoria, string Med_marca, System.DateTime Med_DtFabri, System.DateTime Med_DtVali, string Med_qtde, decimal Med_PreçUnid, decimal Med_PreçVen, string med_Lucro) {
            if ((Med_nmMed == null)) {
                throw new global::System.ArgumentNullException("Med_nmMed");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Med_nmMed));
            }
            if ((Med_NMed == null)) {
                throw new global::System.ArgumentNullException("Med_NMed");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Med_NMed));
            }
            if ((Med_desc == null)) {
                throw new global::System.ArgumentNullException("Med_desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Med_desc));
            }
            if ((Med_categoria == null)) {
                throw new global::System.ArgumentNullException("Med_categoria");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Med_categoria));
            }
            if ((Med_marca == null)) {
                throw new global::System.ArgumentNullException("Med_marca");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Med_marca));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Med_DtFabri));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Med_DtVali));
            if ((Med_qtde == null)) {
                throw new global::System.ArgumentNullException("Med_qtde");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Med_qtde));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Med_PreçUnid));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Med_PreçVen));
            if ((med_Lucro == null)) {
                throw new global::System.ArgumentNullException("med_Lucro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(med_Lucro));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Med_nmMed, 
                    string Med_NMed, 
                    string Med_desc, 
                    string Med_categoria, 
                    string Med_marca, 
                    System.DateTime Med_DtFabri, 
                    System.DateTime Med_DtVali, 
                    string Med_qtde, 
                    decimal Med_PreçUnid, 
                    decimal Med_PreçVen, 
                    string med_Lucro, 
                    int Original_Med_cod, 
                    string Original_Med_nmMed, 
                    string Original_Med_NMed, 
                    string Original_Med_desc, 
                    string Original_Med_categoria, 
                    string Original_Med_marca, 
                    System.DateTime Original_Med_DtFabri, 
                    System.DateTime Original_Med_DtVali, 
                    string Original_Med_qtde, 
                    decimal Original_Med_PreçUnid, 
                    decimal Original_Med_PreçVen, 
                    string Original_med_Lucro, 
                    int Med_cod) {
            if ((Med_nmMed == null)) {
                throw new global::System.ArgumentNullException("Med_nmMed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Med_nmMed));
            }
            if ((Med_NMed == null)) {
                throw new global::System.ArgumentNullException("Med_NMed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Med_NMed));
            }
            if ((Med_desc == null)) {
                throw new global::System.ArgumentNullException("Med_desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Med_desc));
            }
            if ((Med_categoria == null)) {
                throw new global::System.ArgumentNullException("Med_categoria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Med_categoria));
            }
            if ((Med_marca == null)) {
                throw new global::System.ArgumentNullException("Med_marca");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Med_marca));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Med_DtFabri));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Med_DtVali));
            if ((Med_qtde == null)) {
                throw new global::System.ArgumentNullException("Med_qtde");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Med_qtde));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Med_PreçUnid));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Med_PreçVen));
            if ((med_Lucro == null)) {
                throw new global::System.ArgumentNullException("med_Lucro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(med_Lucro));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Med_cod));
            if ((Original_Med_nmMed == null)) {
                throw new global::System.ArgumentNullException("Original_Med_nmMed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Med_nmMed));
            }
            if ((Original_Med_NMed == null)) {
                throw new global::System.ArgumentNullException("Original_Med_NMed");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Med_NMed));
            }
            if ((Original_Med_desc == null)) {
                throw new global::System.ArgumentNullException("Original_Med_desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Med_desc));
            }
            if ((Original_Med_categoria == null)) {
                throw new global::System.ArgumentNullException("Original_Med_categoria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Med_categoria));
            }
            if ((Original_Med_marca == null)) {
                throw new global::System.ArgumentNullException("Original_Med_marca");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Med_marca));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Med_DtFabri));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_Med_DtVali));
            if ((Original_Med_qtde == null)) {
                throw new global::System.ArgumentNullException("Original_Med_qtde");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Med_qtde));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_Med_PreçUnid));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_Med_PreçVen));
            if ((Original_med_Lucro == null)) {
                throw new global::System.ArgumentNullException("Original_med_Lucro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_med_Lucro));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Med_cod));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Med_nmMed, 
                    string Med_NMed, 
                    string Med_desc, 
                    string Med_categoria, 
                    string Med_marca, 
                    System.DateTime Med_DtFabri, 
                    System.DateTime Med_DtVali, 
                    string Med_qtde, 
                    decimal Med_PreçUnid, 
                    decimal Med_PreçVen, 
                    string med_Lucro, 
                    int Original_Med_cod, 
                    string Original_Med_nmMed, 
                    string Original_Med_NMed, 
                    string Original_Med_desc, 
                    string Original_Med_categoria, 
                    string Original_Med_marca, 
                    System.DateTime Original_Med_DtFabri, 
                    System.DateTime Original_Med_DtVali, 
                    string Original_Med_qtde, 
                    decimal Original_Med_PreçUnid, 
                    decimal Original_Med_PreçVen, 
                    string Original_med_Lucro) {
            return this.Update(Med_nmMed, Med_NMed, Med_desc, Med_categoria, Med_marca, Med_DtFabri, Med_DtVali, Med_qtde, Med_PreçUnid, Med_PreçVen, med_Lucro, Original_Med_cod, Original_Med_nmMed, Original_Med_NMed, Original_Med_desc, Original_Med_categoria, Original_Med_marca, Original_Med_DtFabri, Original_Med_DtVali, Original_Med_qtde, Original_Med_PreçUnid, Original_Med_PreçVen, Original_med_Lucro, Original_Med_cod);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vendaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public vendaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "venda";
            tableMapping.ColumnMappings.Add("vend_cd", "vend_cd");
            tableMapping.ColumnMappings.Add("Fun_cd", "Fun_cd");
            tableMapping.ColumnMappings.Add("vend_DtdVend", "vend_DtdVend");
            tableMapping.ColumnMappings.Add("vend_FormPag", "vend_FormPag");
            tableMapping.ColumnMappings.Add("vend_valorTotal", "vend_valorTotal");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [farm].[venda] WHERE (([vend_cd] = @Original_vend_cd) AND ((@IsNull_Fun_cd = 1 AND [Fun_cd] IS NULL) OR ([Fun_cd] = @Original_Fun_cd)) AND ([vend_DtdVend] = @Original_vend_DtdVend) AND ([vend_FormPag] = @Original_vend_FormPag) AND ([vend_valorTotal] = @Original_vend_valorTotal))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_DtdVend", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_DtdVend", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_FormPag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_FormPag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_valorTotal", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_valorTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [farm].[venda] ([Fun_cd], [vend_DtdVend], [vend_FormPag], [vend_valorTotal]) VALUES (@Fun_cd, @vend_DtdVend, @vend_FormPag, @vend_valorTotal);
SELECT vend_cd, Fun_cd, vend_DtdVend, vend_FormPag, vend_valorTotal FROM farm.venda WHERE (vend_cd = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vend_DtdVend", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_DtdVend", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vend_FormPag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_FormPag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vend_valorTotal", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_valorTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [farm].[venda] SET [Fun_cd] = @Fun_cd, [vend_DtdVend] = @vend_DtdVend, [vend_FormPag] = @vend_FormPag, [vend_valorTotal] = @vend_valorTotal WHERE (([vend_cd] = @Original_vend_cd) AND ((@IsNull_Fun_cd = 1 AND [Fun_cd] IS NULL) OR ([Fun_cd] = @Original_Fun_cd)) AND ([vend_DtdVend] = @Original_vend_DtdVend) AND ([vend_FormPag] = @Original_vend_FormPag) AND ([vend_valorTotal] = @Original_vend_valorTotal));
SELECT vend_cd, Fun_cd, vend_DtdVend, vend_FormPag, vend_valorTotal FROM farm.venda WHERE (vend_cd = @vend_cd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vend_DtdVend", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_DtdVend", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vend_FormPag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_FormPag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vend_valorTotal", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_valorTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fun_cd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fun_cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_DtdVend", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_DtdVend", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_FormPag", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_FormPag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vend_valorTotal", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vend_valorTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vend_cd", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "vend_cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FarmaVital.Properties.Settings.Default.FarmaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT vend_cd, Fun_cd, vend_DtdVend, vend_FormPag, vend_valorTotal FROM farm.ven" +
                "da";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FarmaDataSet.vendaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FarmaDataSet.vendaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FarmaDataSet.vendaDataTable dataTable = new FarmaDataSet.vendaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet.vendaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FarmaDataSet dataSet) {
            return this.Adapter.Update(dataSet, "venda");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_vend_cd, global::System.Nullable<int> Original_Fun_cd, System.DateTime Original_vend_DtdVend, string Original_vend_FormPag, decimal Original_vend_valorTotal) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_vend_cd));
            if ((Original_Fun_cd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Fun_cd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_vend_DtdVend));
            if ((Original_vend_FormPag == null)) {
                throw new global::System.ArgumentNullException("Original_vend_FormPag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_vend_FormPag));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_vend_valorTotal));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> Fun_cd, System.DateTime vend_DtdVend, string vend_FormPag, decimal vend_valorTotal) {
            if ((Fun_cd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Fun_cd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(vend_DtdVend));
            if ((vend_FormPag == null)) {
                throw new global::System.ArgumentNullException("vend_FormPag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(vend_FormPag));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(vend_valorTotal));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> Fun_cd, System.DateTime vend_DtdVend, string vend_FormPag, decimal vend_valorTotal, int Original_vend_cd, global::System.Nullable<int> Original_Fun_cd, System.DateTime Original_vend_DtdVend, string Original_vend_FormPag, decimal Original_vend_valorTotal, int vend_cd) {
            if ((Fun_cd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Fun_cd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(vend_DtdVend));
            if ((vend_FormPag == null)) {
                throw new global::System.ArgumentNullException("vend_FormPag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(vend_FormPag));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(vend_valorTotal));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_vend_cd));
            if ((Original_Fun_cd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Fun_cd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_vend_DtdVend));
            if ((Original_vend_FormPag == null)) {
                throw new global::System.ArgumentNullException("Original_vend_FormPag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_vend_FormPag));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_vend_valorTotal));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(vend_cd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> Fun_cd, System.DateTime vend_DtdVend, string vend_FormPag, decimal vend_valorTotal, int Original_vend_cd, global::System.Nullable<int> Original_Fun_cd, System.DateTime Original_vend_DtdVend, string Original_vend_FormPag, decimal Original_vend_valorTotal) {
            return this.Update(Fun_cd, vend_DtdVend, vend_FormPag, vend_valorTotal, Original_vend_cd, Original_Fun_cd, Original_vend_DtdVend, Original_vend_FormPag, Original_vend_valorTotal, Original_vend_cd);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private clienteTableAdapter _clienteTableAdapter;
        
        private estoqueTableAdapter _estoqueTableAdapter;
        
        private fabricanteTableAdapter _fabricanteTableAdapter;
        
        private funcionariosTableAdapter _funcionariosTableAdapter;
        
        private medicamentosTableAdapter _medicamentosTableAdapter;
        
        private vendaTableAdapter _vendaTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public clienteTableAdapter clienteTableAdapter {
            get {
                return this._clienteTableAdapter;
            }
            set {
                this._clienteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public estoqueTableAdapter estoqueTableAdapter {
            get {
                return this._estoqueTableAdapter;
            }
            set {
                this._estoqueTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public fabricanteTableAdapter fabricanteTableAdapter {
            get {
                return this._fabricanteTableAdapter;
            }
            set {
                this._fabricanteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public funcionariosTableAdapter funcionariosTableAdapter {
            get {
                return this._funcionariosTableAdapter;
            }
            set {
                this._funcionariosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public medicamentosTableAdapter medicamentosTableAdapter {
            get {
                return this._medicamentosTableAdapter;
            }
            set {
                this._medicamentosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public vendaTableAdapter vendaTableAdapter {
            get {
                return this._vendaTableAdapter;
            }
            set {
                this._vendaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._clienteTableAdapter != null) 
                            && (this._clienteTableAdapter.Connection != null))) {
                    return this._clienteTableAdapter.Connection;
                }
                if (((this._estoqueTableAdapter != null) 
                            && (this._estoqueTableAdapter.Connection != null))) {
                    return this._estoqueTableAdapter.Connection;
                }
                if (((this._fabricanteTableAdapter != null) 
                            && (this._fabricanteTableAdapter.Connection != null))) {
                    return this._fabricanteTableAdapter.Connection;
                }
                if (((this._funcionariosTableAdapter != null) 
                            && (this._funcionariosTableAdapter.Connection != null))) {
                    return this._funcionariosTableAdapter.Connection;
                }
                if (((this._medicamentosTableAdapter != null) 
                            && (this._medicamentosTableAdapter.Connection != null))) {
                    return this._medicamentosTableAdapter.Connection;
                }
                if (((this._vendaTableAdapter != null) 
                            && (this._vendaTableAdapter.Connection != null))) {
                    return this._vendaTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._clienteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._estoqueTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fabricanteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._funcionariosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._medicamentosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vendaTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(FarmaDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fabricanteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.fabricante.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fabricanteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._funcionariosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.funcionarios.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._funcionariosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._medicamentosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.medicamentos.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._medicamentosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.cliente.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._estoqueTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.estoque.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._estoqueTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vendaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.venda.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vendaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(FarmaDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fabricanteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.fabricante.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fabricanteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._funcionariosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.funcionarios.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._funcionariosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._medicamentosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.medicamentos.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._medicamentosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.cliente.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._estoqueTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.estoque.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._estoqueTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vendaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.venda.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vendaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(FarmaDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._vendaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.venda.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vendaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._estoqueTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.estoque.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._estoqueTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.cliente.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._medicamentosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.medicamentos.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._medicamentosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._funcionariosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.funcionarios.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._funcionariosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fabricanteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.fabricante.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fabricanteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(FarmaDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._clienteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clienteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._estoqueTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._estoqueTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._fabricanteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fabricanteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._funcionariosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._funcionariosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._medicamentosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._medicamentosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._vendaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vendaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager não contém informações de conexão. Defina cada propriedade Ta" +
                        "bleAdapter de TableAdapterManager como uma instância válida de TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Não é possível iniciar a transação. Os dados de conexão atuais não oferecem supor" +
                        "te às transações ou o estado atual não permite que a transação inicie.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._clienteTableAdapter != null)) {
                    revertConnections.Add(this._clienteTableAdapter, this._clienteTableAdapter.Connection);
                    this._clienteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clienteTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clienteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clienteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clienteTableAdapter.Adapter);
                    }
                }
                if ((this._estoqueTableAdapter != null)) {
                    revertConnections.Add(this._estoqueTableAdapter, this._estoqueTableAdapter.Connection);
                    this._estoqueTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._estoqueTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._estoqueTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._estoqueTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._estoqueTableAdapter.Adapter);
                    }
                }
                if ((this._fabricanteTableAdapter != null)) {
                    revertConnections.Add(this._fabricanteTableAdapter, this._fabricanteTableAdapter.Connection);
                    this._fabricanteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fabricanteTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fabricanteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fabricanteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fabricanteTableAdapter.Adapter);
                    }
                }
                if ((this._funcionariosTableAdapter != null)) {
                    revertConnections.Add(this._funcionariosTableAdapter, this._funcionariosTableAdapter.Connection);
                    this._funcionariosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._funcionariosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._funcionariosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._funcionariosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._funcionariosTableAdapter.Adapter);
                    }
                }
                if ((this._medicamentosTableAdapter != null)) {
                    revertConnections.Add(this._medicamentosTableAdapter, this._medicamentosTableAdapter.Connection);
                    this._medicamentosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._medicamentosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._medicamentosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._medicamentosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._medicamentosTableAdapter.Adapter);
                    }
                }
                if ((this._vendaTableAdapter != null)) {
                    revertConnections.Add(this._vendaTableAdapter, this._vendaTableAdapter.Connection);
                    this._vendaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vendaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vendaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vendaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vendaTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._clienteTableAdapter != null)) {
                    this._clienteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clienteTableAdapter]));
                    this._clienteTableAdapter.Transaction = null;
                }
                if ((this._estoqueTableAdapter != null)) {
                    this._estoqueTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._estoqueTableAdapter]));
                    this._estoqueTableAdapter.Transaction = null;
                }
                if ((this._fabricanteTableAdapter != null)) {
                    this._fabricanteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fabricanteTableAdapter]));
                    this._fabricanteTableAdapter.Transaction = null;
                }
                if ((this._funcionariosTableAdapter != null)) {
                    this._funcionariosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._funcionariosTableAdapter]));
                    this._funcionariosTableAdapter.Transaction = null;
                }
                if ((this._medicamentosTableAdapter != null)) {
                    this._medicamentosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._medicamentosTableAdapter]));
                    this._medicamentosTableAdapter.Transaction = null;
                }
                if ((this._vendaTableAdapter != null)) {
                    this._vendaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vendaTableAdapter]));
                    this._vendaTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591